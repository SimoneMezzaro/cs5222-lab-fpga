

================================================================
== Vivado HLS Report for 'mmult_hw'
================================================================
* Date:           Fri Mar 11 01:00:53 2022

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        accel
* Solution:       solution0
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +----------+----------+----------+----------+---------+
    |       Latency       |       Interval      | Pipeline|
    |    min   |    max   |    min   |    max   |   Type  |
    +----------+----------+----------+----------+---------+
    |  58303073|  58303073|  58303074|  58303074|   none  |
    +----------+----------+----------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+----------+----------+----------+-----------+-----------+------+----------+
        |                |       Latency       | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   |    min   |    max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+----------+----------+----------+-----------+-----------+------+----------+
        |- LOAD_OFF_1    |        10|        10|         2|          -|          -|     5|    no    |
        |- LOAD_W_1      |      2580|      2580|       258|          -|          -|    10|    no    |
        | + LOAD_W_2     |       256|       256|         2|          -|          -|   128|    no    |
        |- LT            |  58300480|  58300480|   3643780|          -|          -|    16|    no    |
        | + LOAD_I_1     |     33024|     33024|       258|          -|          -|   128|    no    |
        |  ++ LOAD_I_2   |       256|       256|         2|          -|          -|   128|    no    |
        | + L1           |   3608576|   3608576|     28192|          -|          -|   128|    no    |
        |  ++ L2         |     28190|     28190|      2819|          -|          -|    10|    no    |
        |   +++ L3       |      2816|      2816|        11|          -|          -|   256|    no    |
        | + STORE_O_1    |      2176|      2176|        17|          -|          -|   128|    no    |
        |  ++ STORE_O_2  |        15|        15|         3|          -|          -|     5|    no    |
        +----------------+----------+----------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 28
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond5)
	4  / (exitcond5)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond6)
	7  / (exitcond6)
5 --> 
	6  / (!exitcond9)
	4  / (exitcond9)
6 --> 
	5  / true
7 --> 
	8  / (!tmp_10)
8 --> 
	9  / (!exitcond8)
	11  / (exitcond8)
9 --> 
	10  / (!exitcond7)
	8  / (exitcond7)
10 --> 
	9  / true
11 --> 
	12  / (!exitcond4)
	25  / (exitcond4)
12 --> 
	13  / (!exitcond3)
	11  / (exitcond3)
13 --> 
	14  / true
14 --> 
	15  / (!exitcond2)
	12  / (exitcond2)
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	14  / true
25 --> 
	26  / (!exitcond1)
	7  / (exitcond1)
26 --> 
	27  / (!exitcond)
	25  / (exitcond)
27 --> 
	28  / true
28 --> 
	26  / true
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: StgValue_29 (15)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i64* %in_stream_data_V), !map !49

ST_1: StgValue_30 (16)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_stream_keep_V), !map !55

ST_1: StgValue_31 (17)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_stream_strb_V), !map !59

ST_1: StgValue_32 (18)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i4* %in_stream_user_V), !map !63

ST_1: StgValue_33 (19)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_stream_last_V), !map !67

ST_1: StgValue_34 (20)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i5* %in_stream_id_V), !map !71

ST_1: StgValue_35 (21)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i5* %in_stream_dest_V), !map !75

ST_1: StgValue_36 (22)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i64* %out_stream_data_V), !map !79

ST_1: StgValue_37 (23)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_stream_keep_V), !map !85

ST_1: StgValue_38 (24)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_stream_strb_V), !map !89

ST_1: StgValue_39 (25)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i4* %out_stream_user_V), !map !93

ST_1: StgValue_40 (26)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_stream_last_V), !map !97

ST_1: StgValue_41 (27)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i5* %out_stream_id_V), !map !101

ST_1: StgValue_42 (28)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i5* %out_stream_dest_V), !map !105

ST_1: StgValue_43 (29)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @mmult_hw_str) nounwind

ST_1: offset_buf (30)  [1/1] 0.00ns  loc: ./mmult_float.cpp:28
:15  %offset_buf = alloca [10 x float], align 16

ST_1: weight_buf (31)  [1/1] 0.00ns  loc: ./mmult_float.cpp:29
:16  %weight_buf = alloca [2560 x float], align 4

ST_1: in_buf (32)  [1/1] 0.00ns  loc: ./mmult_float.cpp:30
:17  %in_buf = alloca [32768 x float], align 4

ST_1: out_buf (33)  [1/1] 0.00ns  loc: ./mmult_float.cpp:31
:18  %out_buf = alloca [1280 x float], align 4

ST_1: StgValue_48 (34)  [1/1] 0.00ns  loc: ./mmult_float.cpp:10
:19  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_49 (35)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_50 (36)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface(i64* %out_stream_data_V, i8* %out_stream_keep_V, i8* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_51 (37)  [1/1] 1.77ns  loc: ./mmult_float.cpp:38
:22  br label %1


 <State 2>: 2.53ns
ST_2: i (39)  [1/1] 0.00ns
:0  %i = phi i4 [ 0, %0 ], [ %i_1, %2 ]

ST_2: is_idx (40)  [1/1] 0.00ns  loc: ./mmult_float.cpp:39
:1  %is_idx = phi i3 [ 0, %0 ], [ %tmp_2, %2 ]

ST_2: exitcond5 (41)  [1/1] 2.07ns  loc: ./mmult_float.cpp:38
:2  %exitcond5 = icmp eq i3 %is_idx, -3

ST_2: empty (42)  [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_2: tmp_2 (43)  [1/1] 2.53ns  loc: ./mmult_float.cpp:39
:4  %tmp_2 = add i3 %is_idx, 1

ST_2: StgValue_57 (44)  [1/1] 0.00ns  loc: ./mmult_float.cpp:38
:5  br i1 %exitcond5, label %.preheader17.preheader, label %2

ST_2: empty_5 (47)  [2/2] 0.00ns
:1  %empty_5 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_2: StgValue_59 (63)  [1/1] 1.77ns  loc: ./mmult_float.cpp:45
.preheader17.preheader:0  br label %.preheader17


 <State 3>: 2.62ns
ST_3: StgValue_60 (46)  [1/1] 0.00ns  loc: ./mmult_float.cpp:38
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str5) nounwind

ST_3: empty_5 (47)  [1/2] 0.00ns
:1  %empty_5 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_3: ret (48)  [1/1] 0.00ns
:2  %ret = extractvalue { i64, i8, i8, i4, i1, i5, i5 } %empty_5, 0

ST_3: tmp_5 (49)  [1/1] 0.00ns
:3  %tmp_5 = trunc i64 %ret to i32

ST_3: bitcast1 (50)  [1/1] 0.00ns
:4  %bitcast1 = bitcast i32 %tmp_5 to float

ST_3: tmp_4 (51)  [1/1] 0.00ns  loc: ./mmult_float.cpp:40
:5  %tmp_4 = zext i4 %i to i64

ST_3: offset_buf_addr (52)  [1/1] 0.00ns  loc: ./mmult_float.cpp:40
:6  %offset_buf_addr = getelementptr inbounds [10 x float]* %offset_buf, i64 0, i64 %tmp_4

ST_3: StgValue_67 (53)  [1/1] 2.32ns  loc: ./mmult_float.cpp:40
:7  store float %bitcast1, float* %offset_buf_addr, align 8

ST_3: tmp_6 (54)  [1/1] 0.00ns
:8  %tmp_6 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %ret, i32 32, i32 63)

ST_3: tmp_7 (55)  [1/1] 0.00ns
:9  %tmp_7 = bitcast i32 %tmp_6 to float

ST_3: tmp_8 (56)  [1/1] 0.00ns  loc: ./mmult_float.cpp:41
:10  %tmp_8 = or i4 %i, 1

ST_3: tmp_9 (57)  [1/1] 0.00ns  loc: ./mmult_float.cpp:41
:11  %tmp_9 = zext i4 %tmp_8 to i64

ST_3: offset_buf_addr_1 (58)  [1/1] 0.00ns  loc: ./mmult_float.cpp:41
:12  %offset_buf_addr_1 = getelementptr inbounds [10 x float]* %offset_buf, i64 0, i64 %tmp_9

ST_3: StgValue_73 (59)  [1/1] 2.32ns  loc: ./mmult_float.cpp:41
:13  store float %tmp_7, float* %offset_buf_addr_1, align 4

ST_3: i_1 (60)  [1/1] 2.62ns  loc: ./mmult_float.cpp:38
:14  %i_1 = add i4 2, %i

ST_3: StgValue_75 (61)  [1/1] 0.00ns  loc: ./mmult_float.cpp:38
:15  br label %1


 <State 4>: 3.10ns
ST_4: indvars_iv1 (65)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
.preheader17:0  %indvars_iv1 = phi i11 [ %indvars_iv_next1, %6 ], [ 133, %.preheader17.preheader ]

ST_4: i1 (66)  [1/1] 0.00ns
.preheader17:1  %i1 = phi i4 [ %i_2, %6 ], [ 0, %.preheader17.preheader ]

ST_4: is_idx_1 (67)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
.preheader17:2  %is_idx_1 = phi i11 [ %tmp_s, %6 ], [ 5, %.preheader17.preheader ]

ST_4: exitcond6 (68)  [1/1] 3.10ns  loc: ./mmult_float.cpp:45
.preheader17:3  %exitcond6 = icmp eq i4 %i1, -6

ST_4: empty_6 (69)  [1/1] 0.00ns
.preheader17:4  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_4: i_2 (70)  [1/1] 2.62ns  loc: ./mmult_float.cpp:45
.preheader17:5  %i_2 = add i4 %i1, 1

ST_4: StgValue_82 (71)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
.preheader17:6  br i1 %exitcond6, label %.preheader16.preheader, label %3

ST_4: StgValue_83 (73)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str6) nounwind

ST_4: tmp_3 (74)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:1  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str6)

ST_4: tmp_s (75)  [1/1] 2.86ns  loc: ./mmult_float.cpp:46
:2  %tmp_s = add i11 %is_idx_1, 128

ST_4: tmp_1 (76)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:3  %tmp_1 = call i12 @_ssdm_op_BitConcatenate.i12.i4.i8(i4 %i1, i8 0)

ST_4: tmp_5_cast (77)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:4  %tmp_5_cast = zext i12 %tmp_1 to i13

ST_4: StgValue_88 (78)  [1/1] 1.77ns  loc: ./mmult_float.cpp:46
:5  br label %4

ST_4: StgValue_89 (112)  [1/1] 1.77ns  loc: ./mmult_float.cpp:55
.preheader16.preheader:0  br label %.preheader16


 <State 5>: 2.94ns
ST_5: j (80)  [1/1] 0.00ns
:0  %j = phi i9 [ 0, %3 ], [ %j_1, %5 ]

ST_5: is_idx_2 (81)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:1  %is_idx_2 = phi i11 [ %is_idx_1, %3 ], [ %tmp_11, %5 ]

ST_5: exitcond9 (82)  [1/1] 2.94ns  loc: ./mmult_float.cpp:46
:2  %exitcond9 = icmp eq i11 %is_idx_2, %indvars_iv1

ST_5: empty_7 (83)  [1/1] 0.00ns
:3  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_5: StgValue_94 (84)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:4  br i1 %exitcond9, label %6, label %5

ST_5: tmp_11 (87)  [1/1] 2.86ns  loc: ./mmult_float.cpp:48
:1  %tmp_11 = add i11 1, %is_idx_2

ST_5: empty_8 (88)  [2/2] 0.00ns
:2  %empty_8 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_5: tmp_13_cast (92)  [1/1] 0.00ns  loc: ./mmult_float.cpp:49
:6  %tmp_13_cast = zext i9 %j to i13

ST_5: tmp_14 (93)  [1/1] 2.88ns  loc: ./mmult_float.cpp:49
:7  %tmp_14 = add i13 %tmp_13_cast, %tmp_5_cast

ST_5: tmp_23 (99)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:13  %tmp_23 = trunc i9 %j to i8

ST_5: j_1 (105)  [1/1] 2.82ns  loc: ./mmult_float.cpp:46
:19  %j_1 = add i9 2, %j

ST_5: empty_9 (108)  [1/1] 0.00ns  loc: ./mmult_float.cpp:52
:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str6, i32 %tmp_3)

ST_5: indvars_iv_next1 (109)  [1/1] 2.86ns  loc: ./mmult_float.cpp:45
:1  %indvars_iv_next1 = add i11 %indvars_iv1, 128

ST_5: StgValue_103 (110)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:2  br label %.preheader17


 <State 6>: 3.25ns
ST_6: StgValue_104 (86)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str7) nounwind

ST_6: empty_8 (88)  [1/2] 0.00ns
:2  %empty_8 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_6: ret_1 (89)  [1/1] 0.00ns
:3  %ret_1 = extractvalue { i64, i8, i8, i4, i1, i5, i5 } %empty_8, 0

ST_6: tmp_13 (90)  [1/1] 0.00ns
:4  %tmp_13 = trunc i64 %ret_1 to i32

ST_6: bitcast2 (91)  [1/1] 0.00ns
:5  %bitcast2 = bitcast i32 %tmp_13 to float

ST_6: tmp_14_cast (94)  [1/1] 0.00ns  loc: ./mmult_float.cpp:49
:8  %tmp_14_cast = zext i13 %tmp_14 to i64

ST_6: weight_buf_addr (95)  [1/1] 0.00ns  loc: ./mmult_float.cpp:49
:9  %weight_buf_addr = getelementptr [2560 x float]* %weight_buf, i64 0, i64 %tmp_14_cast

ST_6: StgValue_111 (96)  [1/1] 3.25ns  loc: ./mmult_float.cpp:49
:10  store float %bitcast2, float* %weight_buf_addr, align 8

ST_6: tmp_15 (97)  [1/1] 0.00ns
:11  %tmp_15 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %ret_1, i32 32, i32 63)

ST_6: tmp_16 (98)  [1/1] 0.00ns
:12  %tmp_16 = bitcast i32 %tmp_15 to float

ST_6: tmp_17 (100)  [1/1] 0.00ns  loc: ./mmult_float.cpp:50
:14  %tmp_17 = or i8 %tmp_23, 1

ST_6: tmp_18 (101)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:15  %tmp_18 = call i12 @_ssdm_op_BitConcatenate.i12.i4.i8(i4 %i1, i8 %tmp_17)

ST_6: tmp_19 (102)  [1/1] 0.00ns  loc: ./mmult_float.cpp:50
:16  %tmp_19 = zext i12 %tmp_18 to i64

ST_6: weight_buf_addr_1 (103)  [1/1] 0.00ns  loc: ./mmult_float.cpp:50
:17  %weight_buf_addr_1 = getelementptr [2560 x float]* %weight_buf, i64 0, i64 %tmp_19

ST_6: StgValue_118 (104)  [1/1] 3.25ns  loc: ./mmult_float.cpp:50
:18  store float %tmp_16, float* %weight_buf_addr_1, align 4

ST_6: StgValue_119 (106)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:20  br label %4


 <State 7>: 3.05ns
ST_7: t (114)  [1/1] 0.00ns
.preheader16:0  %t = phi i12 [ %t_1, %26 ], [ 0, %.preheader16.preheader ]

ST_7: os_idx (115)  [1/1] 0.00ns
.preheader16:1  %os_idx = phi i14 [ %os_idx_3, %26 ], [ 0, %.preheader16.preheader ]

ST_7: is_idx_3 (116)  [1/1] 0.00ns
.preheader16:2  %is_idx_3 = phi i19 [ %is_idx_4, %26 ], [ 1285, %.preheader16.preheader ]

ST_7: tmp_10 (117)  [1/1] 0.00ns  loc: ./mmult_float.cpp:55
.preheader16:3  %tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %t, i32 11)

ST_7: empty_10 (118)  [1/1] 0.00ns
.preheader16:4  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_7: StgValue_125 (119)  [1/1] 0.00ns  loc: ./mmult_float.cpp:55
.preheader16:5  br i1 %tmp_10, label %27, label %7

ST_7: StgValue_126 (121)  [1/1] 0.00ns  loc: ./mmult_float.cpp:55
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str8) nounwind

ST_7: tmp_12 (122)  [1/1] 0.00ns  loc: ./mmult_float.cpp:55
:1  %tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str8)

ST_7: is_idx_4 (123)  [1/1] 3.05ns  loc: ./mmult_float.cpp:48
:2  %is_idx_4 = add i19 %is_idx_3, 16384

ST_7: StgValue_129 (124)  [1/1] 1.77ns  loc: ./mmult_float.cpp:58
:3  br label %8

ST_7: StgValue_130 (295)  [1/1] 0.00ns  loc: ./mmult_float.cpp:90
:0  ret void


 <State 8>: 3.05ns
ST_8: indvars_iv5_in (126)  [1/1] 0.00ns
:0  %indvars_iv5_in = phi i19 [ %is_idx_3, %7 ], [ %is_idx_6, %12 ]

ST_8: i2 (127)  [1/1] 0.00ns
:1  %i2 = phi i8 [ 0, %7 ], [ %i_3, %12 ]

ST_8: is_idx_6 (128)  [1/1] 3.05ns  loc: ./mmult_float.cpp:58
:2  %is_idx_6 = add i19 %indvars_iv5_in, 128

ST_8: exitcond8 (129)  [1/1] 2.91ns  loc: ./mmult_float.cpp:58
:3  %exitcond8 = icmp eq i8 %i2, -128

ST_8: empty_11 (130)  [1/1] 0.00ns
:4  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_8: i_3 (131)  [1/1] 2.80ns  loc: ./mmult_float.cpp:58
:5  %i_3 = add i8 %i2, 1

ST_8: StgValue_137 (132)  [1/1] 0.00ns  loc: ./mmult_float.cpp:58
:6  br i1 %exitcond8, label %.preheader.preheader, label %9

ST_8: StgValue_138 (134)  [1/1] 0.00ns  loc: ./mmult_float.cpp:58
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str9) nounwind

ST_8: tmp_21 (135)  [1/1] 0.00ns  loc: ./mmult_float.cpp:58
:1  %tmp_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str9)

ST_8: tmp_22 (136)  [1/1] 0.00ns  loc: ./mmult_float.cpp:58
:2  %tmp_22 = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %i2, i8 0)

ST_8: tmp_24_cast (137)  [1/1] 0.00ns  loc: ./mmult_float.cpp:59
:3  %tmp_24_cast = zext i16 %tmp_22 to i17

ST_8: StgValue_142 (138)  [1/1] 1.77ns  loc: ./mmult_float.cpp:59
:4  br label %10

ST_8: StgValue_143 (171)  [1/1] 1.77ns  loc: ./mmult_float.cpp:68
.preheader.preheader:0  br label %.preheader


 <State 9>: 3.10ns
ST_9: j3 (140)  [1/1] 0.00ns
:0  %j3 = phi i9 [ 0, %9 ], [ %j_2, %11 ]

ST_9: is_idx_5 (141)  [1/1] 0.00ns
:1  %is_idx_5 = phi i19 [ %indvars_iv5_in, %9 ], [ %is_idx_7, %11 ]

ST_9: exitcond7 (142)  [1/1] 3.10ns  loc: ./mmult_float.cpp:59
:2  %exitcond7 = icmp eq i19 %is_idx_5, %is_idx_6

ST_9: empty_12 (143)  [1/1] 0.00ns
:3  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_9: StgValue_148 (144)  [1/1] 0.00ns  loc: ./mmult_float.cpp:59
:4  br i1 %exitcond7, label %12, label %11

ST_9: is_idx_7 (147)  [1/1] 3.05ns  loc: ./mmult_float.cpp:61
:1  %is_idx_7 = add i19 1, %is_idx_5

ST_9: empty_13 (148)  [2/2] 0.00ns
:2  %empty_13 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_9: tmp_23_cast (152)  [1/1] 0.00ns  loc: ./mmult_float.cpp:62
:6  %tmp_23_cast = zext i9 %j3 to i17

ST_9: tmp_41 (153)  [1/1] 2.96ns  loc: ./mmult_float.cpp:62
:7  %tmp_41 = add i17 %tmp_23_cast, %tmp_24_cast

ST_9: tmp_44 (159)  [1/1] 0.00ns  loc: ./mmult_float.cpp:59
:13  %tmp_44 = trunc i9 %j3 to i8

ST_9: j_2 (165)  [1/1] 2.82ns  loc: ./mmult_float.cpp:59
:19  %j_2 = add i9 2, %j3

ST_9: empty_14 (168)  [1/1] 0.00ns  loc: ./mmult_float.cpp:65
:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str9, i32 %tmp_21)

ST_9: StgValue_156 (169)  [1/1] 0.00ns  loc: ./mmult_float.cpp:58
:1  br label %8


 <State 10>: 3.25ns
ST_10: StgValue_157 (146)  [1/1] 0.00ns  loc: ./mmult_float.cpp:59
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str10) nounwind

ST_10: empty_13 (148)  [1/2] 0.00ns
:2  %empty_13 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_10: ret_2 (149)  [1/1] 0.00ns
:3  %ret_2 = extractvalue { i64, i8, i8, i4, i1, i5, i5 } %empty_13, 0

ST_10: tmp_36 (150)  [1/1] 0.00ns
:4  %tmp_36 = trunc i64 %ret_2 to i32

ST_10: bitcast (151)  [1/1] 0.00ns
:5  %bitcast = bitcast i32 %tmp_36 to float

ST_10: tmp_47_cast (154)  [1/1] 0.00ns  loc: ./mmult_float.cpp:62
:8  %tmp_47_cast = zext i17 %tmp_41 to i64

ST_10: in_buf_addr (155)  [1/1] 0.00ns  loc: ./mmult_float.cpp:62
:9  %in_buf_addr = getelementptr [32768 x float]* %in_buf, i64 0, i64 %tmp_47_cast

ST_10: StgValue_164 (156)  [1/1] 3.25ns  loc: ./mmult_float.cpp:62
:10  store float %bitcast, float* %in_buf_addr, align 8

ST_10: tmp_25 (157)  [1/1] 0.00ns
:11  %tmp_25 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %ret_2, i32 32, i32 63)

ST_10: tmp_26 (158)  [1/1] 0.00ns
:12  %tmp_26 = bitcast i32 %tmp_25 to float

ST_10: tmp_27 (160)  [1/1] 0.00ns  loc: ./mmult_float.cpp:63
:14  %tmp_27 = or i8 %tmp_44, 1

ST_10: tmp_45 (161)  [1/1] 0.00ns  loc: ./mmult_float.cpp:58
:15  %tmp_45 = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %i2, i8 %tmp_27)

ST_10: tmp_46 (162)  [1/1] 0.00ns  loc: ./mmult_float.cpp:63
:16  %tmp_46 = zext i16 %tmp_45 to i64

ST_10: in_buf_addr_1 (163)  [1/1] 0.00ns  loc: ./mmult_float.cpp:63
:17  %in_buf_addr_1 = getelementptr [32768 x float]* %in_buf, i64 0, i64 %tmp_46

ST_10: StgValue_171 (164)  [1/1] 3.25ns  loc: ./mmult_float.cpp:63
:18  store float %tmp_26, float* %in_buf_addr_1, align 4

ST_10: StgValue_172 (166)  [1/1] 0.00ns  loc: ./mmult_float.cpp:59
:20  br label %10


 <State 11>: 2.92ns
ST_11: i4 (173)  [1/1] 0.00ns
.preheader:0  %i4 = phi i8 [ %i_4, %19 ], [ 0, %.preheader.preheader ]

ST_11: exitcond4 (174)  [1/1] 2.91ns  loc: ./mmult_float.cpp:68
.preheader:1  %exitcond4 = icmp eq i8 %i4, -128

ST_11: empty_15 (175)  [1/1] 0.00ns
.preheader:2  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_11: i_4 (176)  [1/1] 2.80ns  loc: ./mmult_float.cpp:68
.preheader:3  %i_4 = add i8 %i4, 1

ST_11: StgValue_177 (177)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
.preheader:4  br i1 %exitcond4, label %20, label %13

ST_11: StgValue_178 (179)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str11) nounwind

ST_11: tmp_24 (180)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:1  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str11)

ST_11: tmp_28 (181)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:2  %tmp_28 = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %i4, i8 0)

ST_11: tmp_34_cast (182)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:3  %tmp_34_cast = zext i16 %tmp_28 to i17

ST_11: tmp_30 (183)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:4  %tmp_30 = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %i4, i3 0)

ST_11: p_shl_cast (184)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:5  %p_shl_cast = zext i11 %tmp_30 to i12

ST_11: tmp_32 (185)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:6  %tmp_32 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %i4, i1 false)

ST_11: p_shl1_cast (186)  [1/1] 0.00ns  loc: ./mmult_float.cpp:76
:7  %p_shl1_cast = zext i9 %tmp_32 to i12

ST_11: tmp_34 (187)  [1/1] 2.86ns  loc: ./mmult_float.cpp:76
:8  %tmp_34 = add i12 %p_shl1_cast, %p_shl_cast

ST_11: StgValue_187 (188)  [1/1] 1.77ns  loc: ./mmult_float.cpp:70
:9  br label %14

ST_11: tmp_20 (238)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:0  %tmp_20 = or i14 %os_idx, 5

ST_11: os_idx_3 (239)  [1/1] 2.92ns  loc: ./mmult_float.cpp:86
:1  %os_idx_3 = add i14 %os_idx, 640

ST_11: StgValue_190 (240)  [1/1] 1.77ns  loc: ./mmult_float.cpp:81
:2  br label %21


 <State 12>: 3.10ns
ST_12: j5 (190)  [1/1] 0.00ns
:0  %j5 = phi i4 [ 0, %13 ], [ %j_4, %18 ]

ST_12: exitcond3 (191)  [1/1] 3.10ns  loc: ./mmult_float.cpp:70
:1  %exitcond3 = icmp eq i4 %j5, -6

ST_12: empty_16 (192)  [1/1] 0.00ns
:2  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_12: j_4 (193)  [1/1] 2.62ns  loc: ./mmult_float.cpp:70
:3  %j_4 = add i4 %j5, 1

ST_12: StgValue_195 (194)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:4  br i1 %exitcond3, label %19, label %15

ST_12: tmp_31 (198)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:2  %tmp_31 = zext i4 %j5 to i64

ST_12: tmp_31_cast (199)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:3  %tmp_31_cast = zext i4 %j5 to i12

ST_12: tmp_51 (202)  [1/1] 2.88ns  loc: ./mmult_float.cpp:76
:6  %tmp_51 = add i12 %tmp_31_cast, %tmp_34

ST_12: tmp_55_cast (203)  [1/1] 0.00ns  loc: ./mmult_float.cpp:76
:7  %tmp_55_cast = zext i12 %tmp_51 to i64

ST_12: out_buf_addr_2 (204)  [1/1] 0.00ns  loc: ./mmult_float.cpp:76
:8  %out_buf_addr_2 = getelementptr [1280 x float]* %out_buf, i64 0, i64 %tmp_55_cast

ST_12: offset_buf_addr_2 (205)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:9  %offset_buf_addr_2 = getelementptr inbounds [10 x float]* %offset_buf, i64 0, i64 %tmp_31

ST_12: tmp (206)  [2/2] 2.32ns  loc: ./mmult_float.cpp:72
:10  %tmp = load float* %offset_buf_addr_2, align 4

ST_12: empty_19 (235)  [1/1] 0.00ns  loc: ./mmult_float.cpp:78
:0  %empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str11, i32 %tmp_24)

ST_12: StgValue_204 (236)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:1  br label %.preheader


 <State 13>: 4.09ns
ST_13: StgValue_205 (196)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str12) nounwind

ST_13: tmp_39 (197)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:1  %tmp_39 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str12)

ST_13: tmp_50 (200)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:4  %tmp_50 = call i12 @_ssdm_op_BitConcatenate.i12.i4.i8(i4 %j5, i8 0)

ST_13: tmp_54_cast (201)  [1/1] 0.00ns  loc: ./mmult_float.cpp:76
:5  %tmp_54_cast = zext i12 %tmp_50 to i13

ST_13: tmp (206)  [1/2] 2.32ns  loc: ./mmult_float.cpp:72
:10  %tmp = load float* %offset_buf_addr_2, align 4

ST_13: StgValue_210 (207)  [1/1] 1.77ns  loc: ./mmult_float.cpp:73
:11  br label %16


 <State 14>: 6.22ns
ST_14: k (209)  [1/1] 0.00ns
:0  %k = phi i9 [ 0, %15 ], [ %k_1, %17 ]

ST_14: tmp1 (210)  [1/1] 0.00ns
:1  %tmp1 = phi float [ %tmp, %15 ], [ %tmp_43, %17 ]

ST_14: exitcond2 (211)  [1/1] 3.02ns  loc: ./mmult_float.cpp:73
:2  %exitcond2 = icmp eq i9 %k, -256

ST_14: empty_17 (212)  [1/1] 0.00ns
:3  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_14: k_1 (213)  [1/1] 2.82ns  loc: ./mmult_float.cpp:73
:4  %k_1 = add i9 %k, 1

ST_14: StgValue_216 (214)  [1/1] 0.00ns  loc: ./mmult_float.cpp:73
:5  br i1 %exitcond2, label %18, label %17

ST_14: tmp_41_cast6 (217)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:1  %tmp_41_cast6 = zext i9 %k to i17

ST_14: tmp_41_cast (218)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:2  %tmp_41_cast = zext i9 %k to i13

ST_14: tmp_54 (219)  [1/1] 2.88ns  loc: ./mmult_float.cpp:74
:3  %tmp_54 = add i13 %tmp_54_cast, %tmp_41_cast

ST_14: tmp_58_cast (220)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:4  %tmp_58_cast = zext i13 %tmp_54 to i64

ST_14: weight_buf_addr_2 (221)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:5  %weight_buf_addr_2 = getelementptr [2560 x float]* %weight_buf, i64 0, i64 %tmp_58_cast

ST_14: tmp_55 (222)  [1/1] 2.96ns  loc: ./mmult_float.cpp:74
:6  %tmp_55 = add i17 %tmp_34_cast, %tmp_41_cast6

ST_14: tmp_59_cast (223)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:7  %tmp_59_cast = zext i17 %tmp_55 to i64

ST_14: in_buf_addr_2 (224)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:8  %in_buf_addr_2 = getelementptr [32768 x float]* %in_buf, i64 0, i64 %tmp_59_cast

ST_14: in_buf_load (225)  [2/2] 3.25ns  loc: ./mmult_float.cpp:74
:9  %in_buf_load = load float* %in_buf_addr_2, align 4

ST_14: weight_buf_load (226)  [2/2] 3.25ns  loc: ./mmult_float.cpp:74
:10  %weight_buf_load = load float* %weight_buf_addr_2, align 4

ST_14: StgValue_227 (231)  [1/1] 3.25ns  loc: ./mmult_float.cpp:76
:0  store float %tmp1, float* %out_buf_addr_2, align 4

ST_14: empty_18 (232)  [1/1] 0.00ns  loc: ./mmult_float.cpp:77
:1  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str12, i32 %tmp_39)

ST_14: StgValue_229 (233)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:2  br label %14


 <State 15>: 3.25ns
ST_15: in_buf_load (225)  [1/2] 3.25ns  loc: ./mmult_float.cpp:74
:9  %in_buf_load = load float* %in_buf_addr_2, align 4

ST_15: weight_buf_load (226)  [1/2] 3.25ns  loc: ./mmult_float.cpp:74
:10  %weight_buf_load = load float* %weight_buf_addr_2, align 4


 <State 16>: 5.70ns
ST_16: tmp_42 (227)  [4/4] 5.70ns  loc: ./mmult_float.cpp:74
:11  %tmp_42 = fmul float %in_buf_load, %weight_buf_load


 <State 17>: 5.70ns
ST_17: tmp_42 (227)  [3/4] 5.70ns  loc: ./mmult_float.cpp:74
:11  %tmp_42 = fmul float %in_buf_load, %weight_buf_load


 <State 18>: 5.70ns
ST_18: tmp_42 (227)  [2/4] 5.70ns  loc: ./mmult_float.cpp:74
:11  %tmp_42 = fmul float %in_buf_load, %weight_buf_load


 <State 19>: 5.70ns
ST_19: tmp_42 (227)  [1/4] 5.70ns  loc: ./mmult_float.cpp:74
:11  %tmp_42 = fmul float %in_buf_load, %weight_buf_load


 <State 20>: 7.26ns
ST_20: tmp_43 (228)  [5/5] 7.26ns  loc: ./mmult_float.cpp:74
:12  %tmp_43 = fadd float %tmp1, %tmp_42


 <State 21>: 7.26ns
ST_21: tmp_43 (228)  [4/5] 7.26ns  loc: ./mmult_float.cpp:74
:12  %tmp_43 = fadd float %tmp1, %tmp_42


 <State 22>: 7.26ns
ST_22: tmp_43 (228)  [3/5] 7.26ns  loc: ./mmult_float.cpp:74
:12  %tmp_43 = fadd float %tmp1, %tmp_42


 <State 23>: 7.26ns
ST_23: tmp_43 (228)  [2/5] 7.26ns  loc: ./mmult_float.cpp:74
:12  %tmp_43 = fadd float %tmp1, %tmp_42


 <State 24>: 7.26ns
ST_24: StgValue_240 (216)  [1/1] 0.00ns  loc: ./mmult_float.cpp:73
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str13) nounwind

ST_24: tmp_43 (228)  [1/5] 7.26ns  loc: ./mmult_float.cpp:74
:12  %tmp_43 = fadd float %tmp1, %tmp_42

ST_24: StgValue_242 (229)  [1/1] 0.00ns  loc: ./mmult_float.cpp:73
:13  br label %16


 <State 25>: 2.92ns
ST_25: indvars_iv (242)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:0  %indvars_iv = phi i14 [ %tmp_20, %20 ], [ %indvars_iv_next, %25 ]

ST_25: os_idx_1 (243)  [1/1] 0.00ns  loc: ./mmult_float.cpp:86
:1  %os_idx_1 = phi i14 [ %os_idx, %20 ], [ %tmp_29, %25 ]

ST_25: i6 (244)  [1/1] 0.00ns
:2  %i6 = phi i8 [ 0, %20 ], [ %i_5, %25 ]

ST_25: exitcond1 (245)  [1/1] 2.91ns  loc: ./mmult_float.cpp:81
:3  %exitcond1 = icmp eq i8 %i6, -128

ST_25: empty_20 (246)  [1/1] 0.00ns
:4  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_25: i_5 (247)  [1/1] 2.80ns  loc: ./mmult_float.cpp:81
:5  %i_5 = add i8 %i6, 1

ST_25: StgValue_249 (248)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:6  br i1 %exitcond1, label %26, label %22

ST_25: StgValue_250 (250)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str14) nounwind

ST_25: tmp_38 (251)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:1  %tmp_38 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str14)

ST_25: tmp_29 (252)  [1/1] 2.92ns  loc: ./mmult_float.cpp:86
:2  %tmp_29 = add i14 %os_idx_1, 5

ST_25: tmp_47 (253)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:3  %tmp_47 = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %i6, i3 0)

ST_25: p_shl2_cast (254)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:4  %p_shl2_cast = zext i11 %tmp_47 to i12

ST_25: tmp_48 (255)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:5  %tmp_48 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %i6, i1 false)

ST_25: p_shl3_cast (256)  [1/1] 0.00ns  loc: ./mmult_float.cpp:84
:6  %p_shl3_cast = zext i9 %tmp_48 to i12

ST_25: tmp_49 (257)  [1/1] 2.86ns  loc: ./mmult_float.cpp:84
:7  %tmp_49 = add i12 %p_shl3_cast, %p_shl2_cast

ST_25: StgValue_258 (258)  [1/1] 1.77ns  loc: ./mmult_float.cpp:82
:8  br label %23

ST_25: empty_23 (291)  [1/1] 0.00ns  loc: ./mmult_float.cpp:89
:0  %empty_23 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str8, i32 %tmp_12)

ST_25: t_1 (292)  [1/1] 2.88ns  loc: ./mmult_float.cpp:55
:1  %t_1 = add i12 %t, 128

ST_25: StgValue_261 (293)  [1/1] 0.00ns  loc: ./mmult_float.cpp:55
:2  br label %.preheader16


 <State 26>: 6.13ns
ST_26: os_idx_2 (260)  [1/1] 0.00ns  loc: ./mmult_float.cpp:86
:0  %os_idx_2 = phi i14 [ %os_idx_1, %22 ], [ %tmp_40, %24 ]

ST_26: j7 (261)  [1/1] 0.00ns
:1  %j7 = phi i4 [ 0, %22 ], [ %j_3, %24 ]

ST_26: exitcond (262)  [1/1] 3.01ns  loc: ./mmult_float.cpp:82
:2  %exitcond = icmp eq i14 %os_idx_2, %indvars_iv

ST_26: empty_21 (263)  [1/1] 0.00ns
:3  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_26: StgValue_266 (264)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:4  br i1 %exitcond, label %25, label %24

ST_26: tmp_32_cast (267)  [1/1] 0.00ns  loc: ./mmult_float.cpp:84
:1  %tmp_32_cast = zext i4 %j7 to i12

ST_26: tmp_52 (268)  [1/1] 2.88ns  loc: ./mmult_float.cpp:84
:2  %tmp_52 = add i12 %tmp_49, %tmp_32_cast

ST_26: tmp_56_cast (269)  [1/1] 0.00ns  loc: ./mmult_float.cpp:84
:3  %tmp_56_cast = zext i12 %tmp_52 to i64

ST_26: out_buf_addr (270)  [1/1] 0.00ns  loc: ./mmult_float.cpp:84
:4  %out_buf_addr = getelementptr [1280 x float]* %out_buf, i64 0, i64 %tmp_56_cast

ST_26: out_buf_load (271)  [2/2] 3.25ns  loc: ./mmult_float.cpp:84
:5  %out_buf_load = load float* %out_buf_addr, align 8

ST_26: tmp_35 (273)  [1/1] 0.00ns  loc: ./mmult_float.cpp:85 (grouped into LUT with out node tmp_53)
:7  %tmp_35 = or i4 %j7, 1

ST_26: tmp_36_cast (274)  [1/1] 0.00ns  loc: ./mmult_float.cpp:85 (grouped into LUT with out node tmp_53)
:8  %tmp_36_cast = zext i4 %tmp_35 to i12

ST_26: tmp_53 (275)  [1/1] 2.88ns  loc: ./mmult_float.cpp:85 (out node of the LUT)
:9  %tmp_53 = add i12 %tmp_49, %tmp_36_cast

ST_26: tmp_57_cast (276)  [1/1] 0.00ns  loc: ./mmult_float.cpp:85
:10  %tmp_57_cast = zext i12 %tmp_53 to i64

ST_26: out_buf_addr_1 (277)  [1/1] 0.00ns  loc: ./mmult_float.cpp:85
:11  %out_buf_addr_1 = getelementptr [1280 x float]* %out_buf, i64 0, i64 %tmp_57_cast

ST_26: out_buf_load_1 (278)  [2/2] 3.25ns  loc: ./mmult_float.cpp:85
:12  %out_buf_load_1 = load float* %out_buf_addr_1, align 4

ST_26: tmp_40 (281)  [1/1] 2.92ns  loc: ./mmult_float.cpp:86
:15  %tmp_40 = add i14 %os_idx_2, 1

ST_26: last_assign (282)  [1/1] 3.01ns  loc: ./mmult_float.cpp:86
:16  %last_assign = icmp eq i14 %tmp_40, -6144

ST_26: j_3 (284)  [1/1] 2.62ns  loc: ./mmult_float.cpp:82
:18  %j_3 = add i4 %j7, 2

ST_26: empty_22 (287)  [1/1] 0.00ns  loc: ./mmult_float.cpp:88
:0  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str14, i32 %tmp_38)

ST_26: indvars_iv_next (288)  [1/1] 2.92ns  loc: ./mmult_float.cpp:81
:1  %indvars_iv_next = add i14 %indvars_iv, 5

ST_26: StgValue_283 (289)  [1/1] 0.00ns  loc: ./mmult_float.cpp:81
:2  br label %21


 <State 27>: 3.25ns
ST_27: out_buf_load (271)  [1/2] 3.25ns  loc: ./mmult_float.cpp:84
:5  %out_buf_load = load float* %out_buf_addr, align 8

ST_27: tmp_33 (272)  [1/1] 0.00ns  loc: ./mmult_float.cpp:84
:6  %tmp_33 = bitcast float %out_buf_load to i32

ST_27: out_buf_load_1 (278)  [1/2] 3.25ns  loc: ./mmult_float.cpp:85
:12  %out_buf_load_1 = load float* %out_buf_addr_1, align 4

ST_27: tmp_37 (279)  [1/1] 0.00ns  loc: ./mmult_float.cpp:85
:13  %tmp_37 = bitcast float %out_buf_load_1 to i32

ST_27: converter (280)  [1/1] 0.00ns  loc: ./mmult_float.cpp:85
:14  %converter = call i64 @_ssdm_op_BitConcatenate.i64.i32.i32(i32 %tmp_37, i32 %tmp_33)

ST_27: StgValue_289 (283)  [2/2] 0.00ns  loc: ./mmult_float.cpp:85
:17  call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %out_stream_data_V, i8* %out_stream_keep_V, i8* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, i64 %converter, i8 -1, i8 -1, i4 0, i1 %last_assign, i5 0, i5 0)


 <State 28>: 0.00ns
ST_28: StgValue_290 (266)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str15) nounwind

ST_28: StgValue_291 (283)  [1/2] 0.00ns  loc: ./mmult_float.cpp:85
:17  call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %out_stream_data_V, i8* %out_stream_keep_V, i8* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, i64 %converter, i8 -1, i8 -1, i4 0, i1 %last_assign, i5 0, i5 0)

ST_28: StgValue_292 (285)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:19  br label %23



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ./mmult_float.cpp:38) [39]  (1.77 ns)

 <State 2>: 2.53ns
The critical path consists of the following:
	'phi' operation ('is_idx', ./mmult_float.cpp:39) with incoming values : ('tmp_2', ./mmult_float.cpp:39) [40]  (0 ns)
	'add' operation ('tmp_2', ./mmult_float.cpp:39) [43]  (2.53 ns)

 <State 3>: 2.62ns
The critical path consists of the following:
	'add' operation ('i', ./mmult_float.cpp:38) [60]  (2.62 ns)

 <State 4>: 3.1ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./mmult_float.cpp:45) [66]  (0 ns)
	'icmp' operation ('exitcond6', ./mmult_float.cpp:45) [68]  (3.1 ns)

 <State 5>: 2.94ns
The critical path consists of the following:
	'phi' operation ('is_idx_2', ./mmult_float.cpp:46) with incoming values : ('tmp_s', ./mmult_float.cpp:46) ('tmp_11', ./mmult_float.cpp:48) [81]  (0 ns)
	'icmp' operation ('exitcond9', ./mmult_float.cpp:46) [82]  (2.94 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	axis read on port 'in_stream_data_V' [88]  (0 ns)
	'store' operation (./mmult_float.cpp:50) of variable 'tmp_16' on array 'weight_buf', ./mmult_float.cpp:29 [104]  (3.25 ns)

 <State 7>: 3.05ns
The critical path consists of the following:
	'phi' operation ('is_idx') with incoming values : ('is_idx', ./mmult_float.cpp:48) [116]  (0 ns)
	'add' operation ('is_idx', ./mmult_float.cpp:48) [123]  (3.05 ns)

 <State 8>: 3.05ns
The critical path consists of the following:
	'phi' operation ('is_idx') with incoming values : ('is_idx', ./mmult_float.cpp:48) ('is_idx', ./mmult_float.cpp:58) [126]  (0 ns)
	'add' operation ('is_idx', ./mmult_float.cpp:58) [128]  (3.05 ns)

 <State 9>: 3.1ns
The critical path consists of the following:
	'phi' operation ('is_idx') with incoming values : ('is_idx', ./mmult_float.cpp:48) ('is_idx', ./mmult_float.cpp:58) ('is_idx', ./mmult_float.cpp:61) [141]  (0 ns)
	'icmp' operation ('exitcond7', ./mmult_float.cpp:59) [142]  (3.1 ns)

 <State 10>: 3.25ns
The critical path consists of the following:
	axis read on port 'in_stream_data_V' [148]  (0 ns)
	'store' operation (./mmult_float.cpp:62) of variable 'bitcast' on array 'in_buf', ./mmult_float.cpp:30 [156]  (3.25 ns)

 <State 11>: 2.92ns
The critical path consists of the following:
	'add' operation ('os_idx', ./mmult_float.cpp:86) [239]  (2.92 ns)

 <State 12>: 3.1ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./mmult_float.cpp:70) [190]  (0 ns)
	'icmp' operation ('exitcond3', ./mmult_float.cpp:70) [191]  (3.1 ns)

 <State 13>: 4.09ns
The critical path consists of the following:
	'load' operation ('tmp', ./mmult_float.cpp:72) on array 'offset_buf', ./mmult_float.cpp:28 [206]  (2.32 ns)
	multiplexor before 'phi' operation ('k') with incoming values : ('k', ./mmult_float.cpp:73) [209]  (1.77 ns)

 <State 14>: 6.22ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', ./mmult_float.cpp:73) [209]  (0 ns)
	'add' operation ('tmp_55', ./mmult_float.cpp:74) [222]  (2.96 ns)
	'getelementptr' operation ('in_buf_addr_2', ./mmult_float.cpp:74) [224]  (0 ns)
	'load' operation ('in_buf_load', ./mmult_float.cpp:74) on array 'in_buf', ./mmult_float.cpp:30 [225]  (3.25 ns)

 <State 15>: 3.25ns
The critical path consists of the following:
	'load' operation ('in_buf_load', ./mmult_float.cpp:74) on array 'in_buf', ./mmult_float.cpp:30 [225]  (3.25 ns)

 <State 16>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_42', ./mmult_float.cpp:74) [227]  (5.7 ns)

 <State 17>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_42', ./mmult_float.cpp:74) [227]  (5.7 ns)

 <State 18>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_42', ./mmult_float.cpp:74) [227]  (5.7 ns)

 <State 19>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_42', ./mmult_float.cpp:74) [227]  (5.7 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:74) [228]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:74) [228]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:74) [228]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:74) [228]  (7.26 ns)

 <State 24>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:74) [228]  (7.26 ns)

 <State 25>: 2.92ns
The critical path consists of the following:
	'phi' operation ('os_idx_1', ./mmult_float.cpp:86) with incoming values : ('os_idx', ./mmult_float.cpp:86) ('tmp_29', ./mmult_float.cpp:86) [243]  (0 ns)
	'add' operation ('tmp_29', ./mmult_float.cpp:86) [252]  (2.92 ns)

 <State 26>: 6.13ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./mmult_float.cpp:82) [261]  (0 ns)
	'add' operation ('tmp_52', ./mmult_float.cpp:84) [268]  (2.88 ns)
	'getelementptr' operation ('out_buf_addr', ./mmult_float.cpp:84) [270]  (0 ns)
	'load' operation ('out_buf_load', ./mmult_float.cpp:84) on array 'out_buf', ./mmult_float.cpp:31 [271]  (3.25 ns)

 <State 27>: 3.25ns
The critical path consists of the following:
	'load' operation ('out_buf_load', ./mmult_float.cpp:84) on array 'out_buf', ./mmult_float.cpp:31 [271]  (3.25 ns)

 <State 28>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
