

================================================================
== Vivado HLS Report for 'mmult_hw'
================================================================
* Date:           Fri Mar 11 00:23:53 2022

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        accel
* Solution:       solution0
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  7290147|  7290147|  7290148|  7290148|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOAD_OFF_1  |       10|       10|         2|          -|          -|     5|    no    |
        |- LOAD_W_1    |     2580|     2580|       258|          -|          -|    10|    no    |
        | + LOAD_W_2   |      256|      256|         2|          -|          -|   128|    no    |
        |- LOAD_I_1    |    66048|    66048|       258|          -|          -|   256|    no    |
        | + LOAD_I_2   |      256|      256|         2|          -|          -|   128|    no    |
        |- L1          |  7217152|  7217152|     28192|          -|          -|   256|    no    |
        | + L2         |    28190|    28190|      2819|          -|          -|    10|    no    |
        |  ++ L3       |     2816|     2816|        11|          -|          -|   256|    no    |
        |- STORE_O_1   |     4352|     4352|        17|          -|          -|   256|    no    |
        | + STORE_O_2  |       15|       15|         3|          -|          -|     5|    no    |
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 27
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond5)
	4  / (exitcond5)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond6)
	7  / (exitcond6)
5 --> 
	6  / (!exitcond9)
	4  / (exitcond9)
6 --> 
	5  / true
7 --> 
	8  / (!exitcond8)
	10  / (exitcond8)
8 --> 
	9  / (!exitcond7)
	7  / (exitcond7)
9 --> 
	8  / true
10 --> 
	11  / (!exitcond4)
	24  / (exitcond4)
11 --> 
	12  / (!exitcond3)
	10  / (exitcond3)
12 --> 
	13  / true
13 --> 
	14  / (!exitcond2)
	11  / (exitcond2)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	13  / true
24 --> 
	25  / (!exitcond1)
25 --> 
	26  / (!exitcond)
	24  / (exitcond)
26 --> 
	27  / true
27 --> 
	25  / true
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: StgValue_28 (15)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i64* %in_stream_data_V), !map !49

ST_1: StgValue_29 (16)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_stream_keep_V), !map !55

ST_1: StgValue_30 (17)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_stream_strb_V), !map !59

ST_1: StgValue_31 (18)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i4* %in_stream_user_V), !map !63

ST_1: StgValue_32 (19)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_stream_last_V), !map !67

ST_1: StgValue_33 (20)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i5* %in_stream_id_V), !map !71

ST_1: StgValue_34 (21)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i5* %in_stream_dest_V), !map !75

ST_1: StgValue_35 (22)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i64* %out_stream_data_V), !map !79

ST_1: StgValue_36 (23)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_stream_keep_V), !map !85

ST_1: StgValue_37 (24)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_stream_strb_V), !map !89

ST_1: StgValue_38 (25)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i4* %out_stream_user_V), !map !93

ST_1: StgValue_39 (26)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_stream_last_V), !map !97

ST_1: StgValue_40 (27)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i5* %out_stream_id_V), !map !101

ST_1: StgValue_41 (28)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i5* %out_stream_dest_V), !map !105

ST_1: StgValue_42 (29)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @mmult_hw_str) nounwind

ST_1: offset_buf (30)  [1/1] 0.00ns  loc: ./mmult_float.cpp:28
:15  %offset_buf = alloca [10 x float], align 16

ST_1: weight_buf (31)  [1/1] 0.00ns  loc: ./mmult_float.cpp:29
:16  %weight_buf = alloca [2560 x float], align 4

ST_1: in_buf (32)  [1/1] 0.00ns  loc: ./mmult_float.cpp:30
:17  %in_buf = alloca [65536 x float], align 4

ST_1: out_buf (33)  [1/1] 0.00ns  loc: ./mmult_float.cpp:31
:18  %out_buf = alloca [2560 x float], align 4

ST_1: StgValue_47 (34)  [1/1] 0.00ns  loc: ./mmult_float.cpp:10
:19  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_48 (35)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_49 (36)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface(i64* %out_stream_data_V, i8* %out_stream_keep_V, i8* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_50 (37)  [1/1] 1.77ns  loc: ./mmult_float.cpp:38
:22  br label %1


 <State 2>: 2.53ns
ST_2: i (39)  [1/1] 0.00ns
:0  %i = phi i4 [ 0, %0 ], [ %i_1, %2 ]

ST_2: is_idx (40)  [1/1] 0.00ns  loc: ./mmult_float.cpp:39
:1  %is_idx = phi i3 [ 0, %0 ], [ %tmp_2, %2 ]

ST_2: exitcond5 (41)  [1/1] 2.07ns  loc: ./mmult_float.cpp:38
:2  %exitcond5 = icmp eq i3 %is_idx, -3

ST_2: empty (42)  [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_2: tmp_2 (43)  [1/1] 2.53ns  loc: ./mmult_float.cpp:39
:4  %tmp_2 = add i3 %is_idx, 1

ST_2: StgValue_56 (44)  [1/1] 0.00ns  loc: ./mmult_float.cpp:38
:5  br i1 %exitcond5, label %.preheader18.preheader, label %2

ST_2: empty_5 (47)  [2/2] 0.00ns
:1  %empty_5 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_2: StgValue_58 (63)  [1/1] 1.77ns  loc: ./mmult_float.cpp:45
.preheader18.preheader:0  br label %.preheader18


 <State 3>: 2.62ns
ST_3: StgValue_59 (46)  [1/1] 0.00ns  loc: ./mmult_float.cpp:38
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str5) nounwind

ST_3: empty_5 (47)  [1/2] 0.00ns
:1  %empty_5 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_3: ret (48)  [1/1] 0.00ns
:2  %ret = extractvalue { i64, i8, i8, i4, i1, i5, i5 } %empty_5, 0

ST_3: tmp_5 (49)  [1/1] 0.00ns
:3  %tmp_5 = trunc i64 %ret to i32

ST_3: bitcast1 (50)  [1/1] 0.00ns
:4  %bitcast1 = bitcast i32 %tmp_5 to float

ST_3: tmp_4 (51)  [1/1] 0.00ns  loc: ./mmult_float.cpp:40
:5  %tmp_4 = zext i4 %i to i64

ST_3: offset_buf_addr (52)  [1/1] 0.00ns  loc: ./mmult_float.cpp:40
:6  %offset_buf_addr = getelementptr inbounds [10 x float]* %offset_buf, i64 0, i64 %tmp_4

ST_3: StgValue_66 (53)  [1/1] 2.32ns  loc: ./mmult_float.cpp:40
:7  store float %bitcast1, float* %offset_buf_addr, align 8

ST_3: tmp_6 (54)  [1/1] 0.00ns
:8  %tmp_6 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %ret, i32 32, i32 63)

ST_3: tmp_7 (55)  [1/1] 0.00ns
:9  %tmp_7 = bitcast i32 %tmp_6 to float

ST_3: tmp_8 (56)  [1/1] 0.00ns  loc: ./mmult_float.cpp:41
:10  %tmp_8 = or i4 %i, 1

ST_3: tmp_9 (57)  [1/1] 0.00ns  loc: ./mmult_float.cpp:41
:11  %tmp_9 = zext i4 %tmp_8 to i64

ST_3: offset_buf_addr_1 (58)  [1/1] 0.00ns  loc: ./mmult_float.cpp:41
:12  %offset_buf_addr_1 = getelementptr inbounds [10 x float]* %offset_buf, i64 0, i64 %tmp_9

ST_3: StgValue_72 (59)  [1/1] 2.32ns  loc: ./mmult_float.cpp:41
:13  store float %tmp_7, float* %offset_buf_addr_1, align 4

ST_3: i_1 (60)  [1/1] 2.62ns  loc: ./mmult_float.cpp:38
:14  %i_1 = add i4 2, %i

ST_3: StgValue_74 (61)  [1/1] 0.00ns  loc: ./mmult_float.cpp:38
:15  br label %1


 <State 4>: 3.10ns
ST_4: indvars_iv1 (65)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
.preheader18:0  %indvars_iv1 = phi i11 [ %indvars_iv_next1, %6 ], [ 133, %.preheader18.preheader ]

ST_4: i1 (66)  [1/1] 0.00ns
.preheader18:1  %i1 = phi i4 [ %i_2, %6 ], [ 0, %.preheader18.preheader ]

ST_4: is_idx_1 (67)  [1/1] 0.00ns  loc: ./mmult_float.cpp:48
.preheader18:2  %is_idx_1 = phi i11 [ %tmp_s, %6 ], [ 5, %.preheader18.preheader ]

ST_4: exitcond6 (68)  [1/1] 3.10ns  loc: ./mmult_float.cpp:45
.preheader18:3  %exitcond6 = icmp eq i4 %i1, -6

ST_4: empty_6 (69)  [1/1] 0.00ns
.preheader18:4  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_4: i_2 (70)  [1/1] 2.62ns  loc: ./mmult_float.cpp:45
.preheader18:5  %i_2 = add i4 %i1, 1

ST_4: StgValue_81 (71)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
.preheader18:6  br i1 %exitcond6, label %.preheader17.preheader, label %3

ST_4: StgValue_82 (73)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str6) nounwind

ST_4: tmp_3 (74)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:1  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str6)

ST_4: tmp_s (75)  [1/1] 2.86ns  loc: ./mmult_float.cpp:48
:2  %tmp_s = add i11 %is_idx_1, 128

ST_4: tmp_1 (76)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:3  %tmp_1 = call i12 @_ssdm_op_BitConcatenate.i12.i4.i8(i4 %i1, i8 0)

ST_4: tmp_5_cast (77)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:4  %tmp_5_cast = zext i12 %tmp_1 to i13

ST_4: StgValue_87 (78)  [1/1] 1.77ns  loc: ./mmult_float.cpp:46
:5  br label %4

ST_4: StgValue_88 (112)  [1/1] 1.77ns  loc: ./mmult_float.cpp:56
.preheader17.preheader:0  br label %.preheader17


 <State 5>: 2.94ns
ST_5: j (80)  [1/1] 0.00ns
:0  %j = phi i9 [ 0, %3 ], [ %j_1, %5 ]

ST_5: is_idx_2 (81)  [1/1] 0.00ns  loc: ./mmult_float.cpp:48
:1  %is_idx_2 = phi i11 [ %is_idx_1, %3 ], [ %tmp_11, %5 ]

ST_5: exitcond9 (82)  [1/1] 2.94ns  loc: ./mmult_float.cpp:46
:2  %exitcond9 = icmp eq i11 %is_idx_2, %indvars_iv1

ST_5: empty_7 (83)  [1/1] 0.00ns
:3  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_5: StgValue_93 (84)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:4  br i1 %exitcond9, label %6, label %5

ST_5: tmp_11 (87)  [1/1] 2.86ns  loc: ./mmult_float.cpp:48
:1  %tmp_11 = add i11 1, %is_idx_2

ST_5: empty_8 (88)  [2/2] 0.00ns
:2  %empty_8 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_5: tmp_13_cast (92)  [1/1] 0.00ns  loc: ./mmult_float.cpp:49
:6  %tmp_13_cast = zext i9 %j to i13

ST_5: tmp_14 (93)  [1/1] 2.88ns  loc: ./mmult_float.cpp:49
:7  %tmp_14 = add i13 %tmp_13_cast, %tmp_5_cast

ST_5: tmp_18 (99)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:13  %tmp_18 = trunc i9 %j to i8

ST_5: j_1 (105)  [1/1] 2.82ns  loc: ./mmult_float.cpp:46
:19  %j_1 = add i9 2, %j

ST_5: empty_9 (108)  [1/1] 0.00ns  loc: ./mmult_float.cpp:52
:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str6, i32 %tmp_3)

ST_5: indvars_iv_next1 (109)  [1/1] 2.86ns  loc: ./mmult_float.cpp:45
:1  %indvars_iv_next1 = add i11 %indvars_iv1, 128

ST_5: StgValue_102 (110)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:2  br label %.preheader18


 <State 6>: 3.25ns
ST_6: StgValue_103 (86)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str7) nounwind

ST_6: empty_8 (88)  [1/2] 0.00ns
:2  %empty_8 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_6: ret_1 (89)  [1/1] 0.00ns
:3  %ret_1 = extractvalue { i64, i8, i8, i4, i1, i5, i5 } %empty_8, 0

ST_6: tmp_13 (90)  [1/1] 0.00ns
:4  %tmp_13 = trunc i64 %ret_1 to i32

ST_6: bitcast2 (91)  [1/1] 0.00ns
:5  %bitcast2 = bitcast i32 %tmp_13 to float

ST_6: tmp_18_cast (94)  [1/1] 0.00ns  loc: ./mmult_float.cpp:49
:8  %tmp_18_cast = zext i13 %tmp_14 to i64

ST_6: weight_buf_addr (95)  [1/1] 0.00ns  loc: ./mmult_float.cpp:49
:9  %weight_buf_addr = getelementptr [2560 x float]* %weight_buf, i64 0, i64 %tmp_18_cast

ST_6: StgValue_110 (96)  [1/1] 3.25ns  loc: ./mmult_float.cpp:49
:10  store float %bitcast2, float* %weight_buf_addr, align 8

ST_6: tmp_15 (97)  [1/1] 0.00ns
:11  %tmp_15 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %ret_1, i32 32, i32 63)

ST_6: tmp_16 (98)  [1/1] 0.00ns
:12  %tmp_16 = bitcast i32 %tmp_15 to float

ST_6: tmp_17 (100)  [1/1] 0.00ns  loc: ./mmult_float.cpp:50
:14  %tmp_17 = or i8 %tmp_18, 1

ST_6: tmp_19 (101)  [1/1] 0.00ns  loc: ./mmult_float.cpp:45
:15  %tmp_19 = call i12 @_ssdm_op_BitConcatenate.i12.i4.i8(i4 %i1, i8 %tmp_17)

ST_6: tmp_21 (102)  [1/1] 0.00ns  loc: ./mmult_float.cpp:50
:16  %tmp_21 = zext i12 %tmp_19 to i64

ST_6: weight_buf_addr_1 (103)  [1/1] 0.00ns  loc: ./mmult_float.cpp:50
:17  %weight_buf_addr_1 = getelementptr [2560 x float]* %weight_buf, i64 0, i64 %tmp_21

ST_6: StgValue_117 (104)  [1/1] 3.25ns  loc: ./mmult_float.cpp:50
:18  store float %tmp_16, float* %weight_buf_addr_1, align 4

ST_6: StgValue_118 (106)  [1/1] 0.00ns  loc: ./mmult_float.cpp:46
:20  br label %4


 <State 7>: 3.02ns
ST_7: indvars_iv5 (114)  [1/1] 0.00ns  loc: ./mmult_float.cpp:56
.preheader17:0  %indvars_iv5 = phi i16 [ %indvars_iv_next6, %10 ], [ 1413, %.preheader17.preheader ]

ST_7: i2 (115)  [1/1] 0.00ns
.preheader17:1  %i2 = phi i9 [ %i_3, %10 ], [ 0, %.preheader17.preheader ]

ST_7: is_idx_3 (116)  [1/1] 0.00ns
.preheader17:2  %is_idx_3 = phi i16 [ %is_idx_5, %10 ], [ 1285, %.preheader17.preheader ]

ST_7: exitcond8 (117)  [1/1] 3.02ns  loc: ./mmult_float.cpp:56
.preheader17:3  %exitcond8 = icmp eq i9 %i2, -256

ST_7: empty_10 (118)  [1/1] 0.00ns
.preheader17:4  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_7: i_3 (119)  [1/1] 2.82ns  loc: ./mmult_float.cpp:56
.preheader17:5  %i_3 = add i9 %i2, 1

ST_7: StgValue_125 (120)  [1/1] 0.00ns  loc: ./mmult_float.cpp:56
.preheader17:6  br i1 %exitcond8, label %.preheader16.preheader, label %7

ST_7: StgValue_126 (122)  [1/1] 0.00ns  loc: ./mmult_float.cpp:56
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str8) nounwind

ST_7: tmp_10 (123)  [1/1] 0.00ns  loc: ./mmult_float.cpp:56
:1  %tmp_10 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str8)

ST_7: is_idx_5 (124)  [1/1] 2.96ns  loc: ./mmult_float.cpp:39
:2  %is_idx_5 = add i16 %is_idx_3, 128

ST_7: tmp_12 (125)  [1/1] 0.00ns  loc: ./mmult_float.cpp:56
:3  %tmp_12 = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %i2, i8 0)

ST_7: tmp_14_cast (126)  [1/1] 0.00ns  loc: ./mmult_float.cpp:57
:4  %tmp_14_cast = zext i17 %tmp_12 to i18

ST_7: StgValue_131 (127)  [1/1] 1.77ns  loc: ./mmult_float.cpp:57
:5  br label %8

ST_7: StgValue_132 (161)  [1/1] 1.77ns  loc: ./mmult_float.cpp:66
.preheader16.preheader:0  br label %.preheader16


 <State 8>: 3.03ns
ST_8: j3 (129)  [1/1] 0.00ns
:0  %j3 = phi i9 [ 0, %7 ], [ %j_2, %9 ]

ST_8: is_idx_4 (130)  [1/1] 0.00ns
:1  %is_idx_4 = phi i16 [ %is_idx_3, %7 ], [ %is_idx_6, %9 ]

ST_8: exitcond7 (131)  [1/1] 3.03ns  loc: ./mmult_float.cpp:57
:2  %exitcond7 = icmp eq i16 %is_idx_4, %indvars_iv5

ST_8: empty_11 (132)  [1/1] 0.00ns
:3  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_8: StgValue_137 (133)  [1/1] 0.00ns  loc: ./mmult_float.cpp:57
:4  br i1 %exitcond7, label %10, label %9

ST_8: is_idx_6 (136)  [1/1] 2.96ns  loc: ./mmult_float.cpp:59
:1  %is_idx_6 = add i16 1, %is_idx_4

ST_8: empty_12 (137)  [2/2] 0.00ns
:2  %empty_12 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_8: tmp_21_cast (141)  [1/1] 0.00ns  loc: ./mmult_float.cpp:60
:6  %tmp_21_cast = zext i9 %j3 to i18

ST_8: tmp_37 (142)  [1/1] 2.99ns  loc: ./mmult_float.cpp:60
:7  %tmp_37 = add i18 %tmp_21_cast, %tmp_14_cast

ST_8: tmp_40 (148)  [1/1] 0.00ns  loc: ./mmult_float.cpp:57
:13  %tmp_40 = trunc i9 %j3 to i8

ST_8: j_2 (154)  [1/1] 2.82ns  loc: ./mmult_float.cpp:57
:19  %j_2 = add i9 2, %j3

ST_8: empty_13 (157)  [1/1] 0.00ns  loc: ./mmult_float.cpp:63
:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str8, i32 %tmp_10)

ST_8: indvars_iv_next6 (158)  [1/1] 2.96ns  loc: ./mmult_float.cpp:56
:1  %indvars_iv_next6 = add i16 %indvars_iv5, 128

ST_8: StgValue_146 (159)  [1/1] 0.00ns  loc: ./mmult_float.cpp:56
:2  br label %.preheader17


 <State 9>: 3.25ns
ST_9: StgValue_147 (135)  [1/1] 0.00ns  loc: ./mmult_float.cpp:57
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str9) nounwind

ST_9: empty_12 (137)  [1/2] 0.00ns
:2  %empty_12 = call { i64, i8, i8, i4, i1, i5, i5 } @_ssdm_op_Read.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %in_stream_data_V, i8* %in_stream_keep_V, i8* %in_stream_strb_V, i4* %in_stream_user_V, i1* %in_stream_last_V, i5* %in_stream_id_V, i5* %in_stream_dest_V)

ST_9: ret_2 (138)  [1/1] 0.00ns
:3  %ret_2 = extractvalue { i64, i8, i8, i4, i1, i5, i5 } %empty_12, 0

ST_9: tmp_33 (139)  [1/1] 0.00ns
:4  %tmp_33 = trunc i64 %ret_2 to i32

ST_9: bitcast (140)  [1/1] 0.00ns
:5  %bitcast = bitcast i32 %tmp_33 to float

ST_9: tmp_43_cast (143)  [1/1] 0.00ns  loc: ./mmult_float.cpp:60
:8  %tmp_43_cast = zext i18 %tmp_37 to i64

ST_9: in_buf_addr (144)  [1/1] 0.00ns  loc: ./mmult_float.cpp:60
:9  %in_buf_addr = getelementptr [65536 x float]* %in_buf, i64 0, i64 %tmp_43_cast

ST_9: StgValue_154 (145)  [1/1] 3.25ns  loc: ./mmult_float.cpp:60
:10  store float %bitcast, float* %in_buf_addr, align 8

ST_9: tmp_23 (146)  [1/1] 0.00ns
:11  %tmp_23 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %ret_2, i32 32, i32 63)

ST_9: tmp_24 (147)  [1/1] 0.00ns
:12  %tmp_24 = bitcast i32 %tmp_23 to float

ST_9: tmp_25 (149)  [1/1] 0.00ns  loc: ./mmult_float.cpp:61
:14  %tmp_25 = or i8 %tmp_40, 1

ST_9: tmp_41 (150)  [1/1] 0.00ns  loc: ./mmult_float.cpp:56
:15  %tmp_41 = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %i2, i8 %tmp_25)

ST_9: tmp_42 (151)  [1/1] 0.00ns  loc: ./mmult_float.cpp:61
:16  %tmp_42 = zext i17 %tmp_41 to i64

ST_9: in_buf_addr_1 (152)  [1/1] 0.00ns  loc: ./mmult_float.cpp:61
:17  %in_buf_addr_1 = getelementptr [65536 x float]* %in_buf, i64 0, i64 %tmp_42

ST_9: StgValue_161 (153)  [1/1] 3.25ns  loc: ./mmult_float.cpp:61
:18  store float %tmp_24, float* %in_buf_addr_1, align 4

ST_9: StgValue_162 (155)  [1/1] 0.00ns  loc: ./mmult_float.cpp:57
:20  br label %8


 <State 10>: 3.02ns
ST_10: i4 (163)  [1/1] 0.00ns
.preheader16:0  %i4 = phi i9 [ %i_4, %17 ], [ 0, %.preheader16.preheader ]

ST_10: exitcond4 (164)  [1/1] 3.02ns  loc: ./mmult_float.cpp:66
.preheader16:1  %exitcond4 = icmp eq i9 %i4, -256

ST_10: empty_14 (165)  [1/1] 0.00ns
.preheader16:2  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_10: i_4 (166)  [1/1] 2.82ns  loc: ./mmult_float.cpp:66
.preheader16:3  %i_4 = add i9 %i4, 1

ST_10: StgValue_167 (167)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
.preheader16:4  br i1 %exitcond4, label %.preheader.preheader, label %11

ST_10: StgValue_168 (169)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str10) nounwind

ST_10: tmp_20 (170)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:1  %tmp_20 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str10)

ST_10: tmp_22 (171)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:2  %tmp_22 = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %i4, i8 0)

ST_10: tmp_27_cast (172)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:3  %tmp_27_cast = zext i17 %tmp_22 to i18

ST_10: tmp_26 (173)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:4  %tmp_26 = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %i4, i3 0)

ST_10: p_shl_cast (174)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:5  %p_shl_cast = zext i12 %tmp_26 to i13

ST_10: tmp_27 (175)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:6  %tmp_27 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %i4, i1 false)

ST_10: p_shl1_cast (176)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:7  %p_shl1_cast = zext i10 %tmp_27 to i13

ST_10: tmp_29 (177)  [1/1] 2.88ns  loc: ./mmult_float.cpp:74
:8  %tmp_29 = add i13 %p_shl1_cast, %p_shl_cast

ST_10: StgValue_177 (178)  [1/1] 1.77ns  loc: ./mmult_float.cpp:68
:9  br label %12

ST_10: StgValue_178 (228)  [1/1] 1.77ns  loc: ./mmult_float.cpp:79
.preheader.preheader:0  br label %.preheader


 <State 11>: 3.10ns
ST_11: j5 (180)  [1/1] 0.00ns
:0  %j5 = phi i4 [ 0, %11 ], [ %j_4, %16 ]

ST_11: exitcond3 (181)  [1/1] 3.10ns  loc: ./mmult_float.cpp:68
:1  %exitcond3 = icmp eq i4 %j5, -6

ST_11: empty_15 (182)  [1/1] 0.00ns
:2  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_11: j_4 (183)  [1/1] 2.62ns  loc: ./mmult_float.cpp:68
:3  %j_4 = add i4 %j5, 1

ST_11: StgValue_183 (184)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:4  br i1 %exitcond3, label %17, label %13

ST_11: tmp_28 (188)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:2  %tmp_28 = zext i4 %j5 to i64

ST_11: tmp_28_cast (189)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:3  %tmp_28_cast = zext i4 %j5 to i13

ST_11: tmp_47 (192)  [1/1] 2.90ns  loc: ./mmult_float.cpp:74
:6  %tmp_47 = add i13 %tmp_28_cast, %tmp_29

ST_11: tmp_51_cast (193)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:7  %tmp_51_cast = zext i13 %tmp_47 to i64

ST_11: out_buf_addr_2 (194)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:8  %out_buf_addr_2 = getelementptr [2560 x float]* %out_buf, i64 0, i64 %tmp_51_cast

ST_11: offset_buf_addr_2 (195)  [1/1] 0.00ns  loc: ./mmult_float.cpp:70
:9  %offset_buf_addr_2 = getelementptr inbounds [10 x float]* %offset_buf, i64 0, i64 %tmp_28

ST_11: tmp (196)  [2/2] 2.32ns  loc: ./mmult_float.cpp:70
:10  %tmp = load float* %offset_buf_addr_2, align 4

ST_11: empty_18 (225)  [1/1] 0.00ns  loc: ./mmult_float.cpp:76
:0  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str10, i32 %tmp_20)

ST_11: StgValue_192 (226)  [1/1] 0.00ns  loc: ./mmult_float.cpp:66
:1  br label %.preheader16


 <State 12>: 4.09ns
ST_12: StgValue_193 (186)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str11) nounwind

ST_12: tmp_35 (187)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:1  %tmp_35 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str11)

ST_12: tmp_46 (190)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:4  %tmp_46 = call i12 @_ssdm_op_BitConcatenate.i12.i4.i8(i4 %j5, i8 0)

ST_12: tmp_50_cast (191)  [1/1] 0.00ns  loc: ./mmult_float.cpp:74
:5  %tmp_50_cast = zext i12 %tmp_46 to i13

ST_12: tmp (196)  [1/2] 2.32ns  loc: ./mmult_float.cpp:70
:10  %tmp = load float* %offset_buf_addr_2, align 4

ST_12: StgValue_198 (197)  [1/1] 1.77ns  loc: ./mmult_float.cpp:71
:11  br label %14


 <State 13>: 6.25ns
ST_13: k (199)  [1/1] 0.00ns
:0  %k = phi i9 [ 0, %13 ], [ %k_1, %15 ]

ST_13: tmp1 (200)  [1/1] 0.00ns
:1  %tmp1 = phi float [ %tmp, %13 ], [ %tmp_39, %15 ]

ST_13: exitcond2 (201)  [1/1] 3.02ns  loc: ./mmult_float.cpp:71
:2  %exitcond2 = icmp eq i9 %k, -256

ST_13: empty_16 (202)  [1/1] 0.00ns
:3  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_13: k_1 (203)  [1/1] 2.82ns  loc: ./mmult_float.cpp:71
:4  %k_1 = add i9 %k, 1

ST_13: StgValue_204 (204)  [1/1] 0.00ns  loc: ./mmult_float.cpp:71
:5  br i1 %exitcond2, label %16, label %15

ST_13: tmp_37_cast6 (207)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:1  %tmp_37_cast6 = zext i9 %k to i18

ST_13: tmp_37_cast (208)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:2  %tmp_37_cast = zext i9 %k to i13

ST_13: tmp_50 (209)  [1/1] 2.88ns  loc: ./mmult_float.cpp:72
:3  %tmp_50 = add i13 %tmp_50_cast, %tmp_37_cast

ST_13: tmp_54_cast (210)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:4  %tmp_54_cast = zext i13 %tmp_50 to i64

ST_13: weight_buf_addr_2 (211)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:5  %weight_buf_addr_2 = getelementptr [2560 x float]* %weight_buf, i64 0, i64 %tmp_54_cast

ST_13: tmp_51 (212)  [1/1] 2.99ns  loc: ./mmult_float.cpp:72
:6  %tmp_51 = add i18 %tmp_27_cast, %tmp_37_cast6

ST_13: tmp_55_cast (213)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:7  %tmp_55_cast = zext i18 %tmp_51 to i64

ST_13: in_buf_addr_2 (214)  [1/1] 0.00ns  loc: ./mmult_float.cpp:72
:8  %in_buf_addr_2 = getelementptr [65536 x float]* %in_buf, i64 0, i64 %tmp_55_cast

ST_13: in_buf_load (215)  [2/2] 3.25ns  loc: ./mmult_float.cpp:72
:9  %in_buf_load = load float* %in_buf_addr_2, align 4

ST_13: weight_buf_load (216)  [2/2] 3.25ns  loc: ./mmult_float.cpp:72
:10  %weight_buf_load = load float* %weight_buf_addr_2, align 4

ST_13: StgValue_215 (221)  [1/1] 3.25ns  loc: ./mmult_float.cpp:74
:0  store float %tmp1, float* %out_buf_addr_2, align 4

ST_13: empty_17 (222)  [1/1] 0.00ns  loc: ./mmult_float.cpp:75
:1  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str11, i32 %tmp_35)

ST_13: StgValue_217 (223)  [1/1] 0.00ns  loc: ./mmult_float.cpp:68
:2  br label %12


 <State 14>: 3.25ns
ST_14: in_buf_load (215)  [1/2] 3.25ns  loc: ./mmult_float.cpp:72
:9  %in_buf_load = load float* %in_buf_addr_2, align 4

ST_14: weight_buf_load (216)  [1/2] 3.25ns  loc: ./mmult_float.cpp:72
:10  %weight_buf_load = load float* %weight_buf_addr_2, align 4


 <State 15>: 5.70ns
ST_15: tmp_38 (217)  [4/4] 5.70ns  loc: ./mmult_float.cpp:72
:11  %tmp_38 = fmul float %in_buf_load, %weight_buf_load


 <State 16>: 5.70ns
ST_16: tmp_38 (217)  [3/4] 5.70ns  loc: ./mmult_float.cpp:72
:11  %tmp_38 = fmul float %in_buf_load, %weight_buf_load


 <State 17>: 5.70ns
ST_17: tmp_38 (217)  [2/4] 5.70ns  loc: ./mmult_float.cpp:72
:11  %tmp_38 = fmul float %in_buf_load, %weight_buf_load


 <State 18>: 5.70ns
ST_18: tmp_38 (217)  [1/4] 5.70ns  loc: ./mmult_float.cpp:72
:11  %tmp_38 = fmul float %in_buf_load, %weight_buf_load


 <State 19>: 7.26ns
ST_19: tmp_39 (218)  [5/5] 7.26ns  loc: ./mmult_float.cpp:72
:12  %tmp_39 = fadd float %tmp1, %tmp_38


 <State 20>: 7.26ns
ST_20: tmp_39 (218)  [4/5] 7.26ns  loc: ./mmult_float.cpp:72
:12  %tmp_39 = fadd float %tmp1, %tmp_38


 <State 21>: 7.26ns
ST_21: tmp_39 (218)  [3/5] 7.26ns  loc: ./mmult_float.cpp:72
:12  %tmp_39 = fadd float %tmp1, %tmp_38


 <State 22>: 7.26ns
ST_22: tmp_39 (218)  [2/5] 7.26ns  loc: ./mmult_float.cpp:72
:12  %tmp_39 = fadd float %tmp1, %tmp_38


 <State 23>: 7.26ns
ST_23: StgValue_228 (206)  [1/1] 0.00ns  loc: ./mmult_float.cpp:71
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str12) nounwind

ST_23: tmp_39 (218)  [1/5] 7.26ns  loc: ./mmult_float.cpp:72
:12  %tmp_39 = fadd float %tmp1, %tmp_38

ST_23: StgValue_230 (219)  [1/1] 0.00ns  loc: ./mmult_float.cpp:71
:13  br label %14


 <State 24>: 3.02ns
ST_24: indvars_iv (230)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
.preheader:0  %indvars_iv = phi i11 [ %indvars_iv_next, %21 ], [ 5, %.preheader.preheader ]

ST_24: os_idx (231)  [1/1] 0.00ns
.preheader:1  %os_idx = phi i11 [ %os_idx_2, %21 ], [ 0, %.preheader.preheader ]

ST_24: i6 (232)  [1/1] 0.00ns
.preheader:2  %i6 = phi i9 [ %i_5, %21 ], [ 0, %.preheader.preheader ]

ST_24: exitcond1 (233)  [1/1] 3.02ns  loc: ./mmult_float.cpp:79
.preheader:3  %exitcond1 = icmp eq i9 %i6, -256

ST_24: empty_19 (234)  [1/1] 0.00ns
.preheader:4  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_24: i_5 (235)  [1/1] 2.82ns  loc: ./mmult_float.cpp:79
.preheader:5  %i_5 = add i9 %i6, 1

ST_24: StgValue_237 (236)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
.preheader:6  br i1 %exitcond1, label %22, label %18

ST_24: StgValue_238 (238)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str13) nounwind

ST_24: tmp_31 (239)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
:1  %tmp_31 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str13)

ST_24: os_idx_2 (240)  [1/1] 2.86ns  loc: ./mmult_float.cpp:84
:2  %os_idx_2 = add i11 %os_idx, 5

ST_24: tmp_43 (241)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
:3  %tmp_43 = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %i6, i3 0)

ST_24: p_shl2_cast (242)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
:4  %p_shl2_cast = zext i12 %tmp_43 to i13

ST_24: tmp_44 (243)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
:5  %tmp_44 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %i6, i1 false)

ST_24: p_shl3_cast (244)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:6  %p_shl3_cast = zext i10 %tmp_44 to i13

ST_24: tmp_45 (245)  [1/1] 2.88ns  loc: ./mmult_float.cpp:82
:7  %tmp_45 = add i13 %p_shl3_cast, %p_shl2_cast

ST_24: StgValue_246 (246)  [1/1] 1.77ns  loc: ./mmult_float.cpp:80
:8  br label %19

ST_24: StgValue_247 (279)  [1/1] 0.00ns  loc: ./mmult_float.cpp:87
:0  ret void


 <State 25>: 6.15ns
ST_25: os_idx_1 (248)  [1/1] 0.00ns  loc: ./mmult_float.cpp:84
:0  %os_idx_1 = phi i11 [ %os_idx, %18 ], [ %tmp_36, %20 ]

ST_25: j7 (249)  [1/1] 0.00ns
:1  %j7 = phi i4 [ 0, %18 ], [ %j_3, %20 ]

ST_25: exitcond (250)  [1/1] 2.94ns  loc: ./mmult_float.cpp:80
:2  %exitcond = icmp eq i11 %os_idx_1, %indvars_iv

ST_25: empty_20 (251)  [1/1] 0.00ns
:3  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_25: StgValue_252 (252)  [1/1] 0.00ns  loc: ./mmult_float.cpp:80
:4  br i1 %exitcond, label %21, label %20

ST_25: tmp_29_cast (255)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:1  %tmp_29_cast = zext i4 %j7 to i13

ST_25: tmp_48 (256)  [1/1] 2.90ns  loc: ./mmult_float.cpp:82
:2  %tmp_48 = add i13 %tmp_45, %tmp_29_cast

ST_25: tmp_52_cast (257)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:3  %tmp_52_cast = zext i13 %tmp_48 to i64

ST_25: out_buf_addr (258)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:4  %out_buf_addr = getelementptr [2560 x float]* %out_buf, i64 0, i64 %tmp_52_cast

ST_25: out_buf_load (259)  [2/2] 3.25ns  loc: ./mmult_float.cpp:82
:5  %out_buf_load = load float* %out_buf_addr, align 8

ST_25: tmp_32 (261)  [1/1] 0.00ns  loc: ./mmult_float.cpp:83 (grouped into LUT with out node tmp_49)
:7  %tmp_32 = or i4 %j7, 1

ST_25: tmp_33_cast (262)  [1/1] 0.00ns  loc: ./mmult_float.cpp:83 (grouped into LUT with out node tmp_49)
:8  %tmp_33_cast = zext i4 %tmp_32 to i13

ST_25: tmp_49 (263)  [1/1] 2.90ns  loc: ./mmult_float.cpp:83 (out node of the LUT)
:9  %tmp_49 = add i13 %tmp_45, %tmp_33_cast

ST_25: tmp_53_cast (264)  [1/1] 0.00ns  loc: ./mmult_float.cpp:83
:10  %tmp_53_cast = zext i13 %tmp_49 to i64

ST_25: out_buf_addr_1 (265)  [1/1] 0.00ns  loc: ./mmult_float.cpp:83
:11  %out_buf_addr_1 = getelementptr [2560 x float]* %out_buf, i64 0, i64 %tmp_53_cast

ST_25: out_buf_load_1 (266)  [2/2] 3.25ns  loc: ./mmult_float.cpp:83
:12  %out_buf_load_1 = load float* %out_buf_addr_1, align 4

ST_25: tmp_36 (269)  [1/1] 2.86ns  loc: ./mmult_float.cpp:84
:15  %tmp_36 = add i11 %os_idx_1, 1

ST_25: last_assign (270)  [1/1] 2.94ns  loc: ./mmult_float.cpp:84
:16  %last_assign = icmp eq i11 %tmp_36, -768

ST_25: j_3 (272)  [1/1] 2.62ns  loc: ./mmult_float.cpp:80
:18  %j_3 = add i4 %j7, 2

ST_25: empty_21 (275)  [1/1] 0.00ns  loc: ./mmult_float.cpp:86
:0  %empty_21 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str13, i32 %tmp_31)

ST_25: indvars_iv_next (276)  [1/1] 2.86ns  loc: ./mmult_float.cpp:79
:1  %indvars_iv_next = add i11 %indvars_iv, 5

ST_25: StgValue_269 (277)  [1/1] 0.00ns  loc: ./mmult_float.cpp:79
:2  br label %.preheader


 <State 26>: 3.25ns
ST_26: out_buf_load (259)  [1/2] 3.25ns  loc: ./mmult_float.cpp:82
:5  %out_buf_load = load float* %out_buf_addr, align 8

ST_26: tmp_30 (260)  [1/1] 0.00ns  loc: ./mmult_float.cpp:82
:6  %tmp_30 = bitcast float %out_buf_load to i32

ST_26: out_buf_load_1 (266)  [1/2] 3.25ns  loc: ./mmult_float.cpp:83
:12  %out_buf_load_1 = load float* %out_buf_addr_1, align 4

ST_26: tmp_34 (267)  [1/1] 0.00ns  loc: ./mmult_float.cpp:83
:13  %tmp_34 = bitcast float %out_buf_load_1 to i32

ST_26: converter (268)  [1/1] 0.00ns  loc: ./mmult_float.cpp:83
:14  %converter = call i64 @_ssdm_op_BitConcatenate.i64.i32.i32(i32 %tmp_34, i32 %tmp_30)

ST_26: StgValue_275 (271)  [2/2] 0.00ns  loc: ./mmult_float.cpp:83
:17  call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %out_stream_data_V, i8* %out_stream_keep_V, i8* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, i64 %converter, i8 -1, i8 -1, i4 0, i1 %last_assign, i5 0, i5 0)


 <State 27>: 0.00ns
ST_27: StgValue_276 (254)  [1/1] 0.00ns  loc: ./mmult_float.cpp:80
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str14) nounwind

ST_27: StgValue_277 (271)  [1/2] 0.00ns  loc: ./mmult_float.cpp:83
:17  call void @_ssdm_op_Write.axis.volatile.i64P.i8P.i8P.i4P.i1P.i5P.i5P(i64* %out_stream_data_V, i8* %out_stream_keep_V, i8* %out_stream_strb_V, i4* %out_stream_user_V, i1* %out_stream_last_V, i5* %out_stream_id_V, i5* %out_stream_dest_V, i64 %converter, i8 -1, i8 -1, i4 0, i1 %last_assign, i5 0, i5 0)

ST_27: StgValue_278 (273)  [1/1] 0.00ns  loc: ./mmult_float.cpp:80
:19  br label %19



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ./mmult_float.cpp:38) [39]  (1.77 ns)

 <State 2>: 2.53ns
The critical path consists of the following:
	'phi' operation ('is_idx', ./mmult_float.cpp:39) with incoming values : ('tmp_2', ./mmult_float.cpp:39) [40]  (0 ns)
	'add' operation ('tmp_2', ./mmult_float.cpp:39) [43]  (2.53 ns)

 <State 3>: 2.62ns
The critical path consists of the following:
	'add' operation ('i', ./mmult_float.cpp:38) [60]  (2.62 ns)

 <State 4>: 3.1ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./mmult_float.cpp:45) [66]  (0 ns)
	'icmp' operation ('exitcond6', ./mmult_float.cpp:45) [68]  (3.1 ns)

 <State 5>: 2.94ns
The critical path consists of the following:
	'phi' operation ('is_idx_2', ./mmult_float.cpp:48) with incoming values : ('tmp_s', ./mmult_float.cpp:48) ('tmp_11', ./mmult_float.cpp:48) [81]  (0 ns)
	'icmp' operation ('exitcond9', ./mmult_float.cpp:46) [82]  (2.94 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	axis read on port 'in_stream_data_V' [88]  (0 ns)
	'store' operation (./mmult_float.cpp:50) of variable 'tmp_16' on array 'weight_buf', ./mmult_float.cpp:29 [104]  (3.25 ns)

 <State 7>: 3.02ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./mmult_float.cpp:56) [115]  (0 ns)
	'icmp' operation ('exitcond8', ./mmult_float.cpp:56) [117]  (3.02 ns)

 <State 8>: 3.03ns
The critical path consists of the following:
	'phi' operation ('is_idx') with incoming values : ('is_idx', ./mmult_float.cpp:39) ('is_idx', ./mmult_float.cpp:59) [130]  (0 ns)
	'icmp' operation ('exitcond7', ./mmult_float.cpp:57) [131]  (3.03 ns)

 <State 9>: 3.25ns
The critical path consists of the following:
	axis read on port 'in_stream_data_V' [137]  (0 ns)
	'store' operation (./mmult_float.cpp:60) of variable 'bitcast' on array 'in_buf', ./mmult_float.cpp:30 [145]  (3.25 ns)

 <State 10>: 3.02ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./mmult_float.cpp:66) [163]  (0 ns)
	'icmp' operation ('exitcond4', ./mmult_float.cpp:66) [164]  (3.02 ns)

 <State 11>: 3.1ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./mmult_float.cpp:68) [180]  (0 ns)
	'icmp' operation ('exitcond3', ./mmult_float.cpp:68) [181]  (3.1 ns)

 <State 12>: 4.09ns
The critical path consists of the following:
	'load' operation ('tmp', ./mmult_float.cpp:70) on array 'offset_buf', ./mmult_float.cpp:28 [196]  (2.32 ns)
	multiplexor before 'phi' operation ('k') with incoming values : ('k', ./mmult_float.cpp:71) [199]  (1.77 ns)

 <State 13>: 6.25ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', ./mmult_float.cpp:71) [199]  (0 ns)
	'add' operation ('tmp_51', ./mmult_float.cpp:72) [212]  (2.99 ns)
	'getelementptr' operation ('in_buf_addr_2', ./mmult_float.cpp:72) [214]  (0 ns)
	'load' operation ('in_buf_load', ./mmult_float.cpp:72) on array 'in_buf', ./mmult_float.cpp:30 [215]  (3.25 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'load' operation ('in_buf_load', ./mmult_float.cpp:72) on array 'in_buf', ./mmult_float.cpp:30 [215]  (3.25 ns)

 <State 15>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_38', ./mmult_float.cpp:72) [217]  (5.7 ns)

 <State 16>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_38', ./mmult_float.cpp:72) [217]  (5.7 ns)

 <State 17>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_38', ./mmult_float.cpp:72) [217]  (5.7 ns)

 <State 18>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_38', ./mmult_float.cpp:72) [217]  (5.7 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:72) [218]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:72) [218]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:72) [218]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:72) [218]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', ./mmult_float.cpp:72) [218]  (7.26 ns)

 <State 24>: 3.02ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./mmult_float.cpp:79) [232]  (0 ns)
	'icmp' operation ('exitcond1', ./mmult_float.cpp:79) [233]  (3.02 ns)

 <State 25>: 6.15ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', ./mmult_float.cpp:80) [249]  (0 ns)
	'add' operation ('tmp_48', ./mmult_float.cpp:82) [256]  (2.9 ns)
	'getelementptr' operation ('out_buf_addr', ./mmult_float.cpp:82) [258]  (0 ns)
	'load' operation ('out_buf_load', ./mmult_float.cpp:82) on array 'out_buf', ./mmult_float.cpp:31 [259]  (3.25 ns)

 <State 26>: 3.25ns
The critical path consists of the following:
	'load' operation ('out_buf_load', ./mmult_float.cpp:82) on array 'out_buf', ./mmult_float.cpp:31 [259]  (3.25 ns)

 <State 27>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
