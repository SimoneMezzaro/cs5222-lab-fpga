// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mmult_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mmult_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mmult_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<27> mmult_hw::ap_ST_fsm_state1 = "1";
const sc_lv<27> mmult_hw::ap_ST_fsm_state2 = "10";
const sc_lv<27> mmult_hw::ap_ST_fsm_state3 = "100";
const sc_lv<27> mmult_hw::ap_ST_fsm_state4 = "1000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state5 = "10000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state6 = "100000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state7 = "1000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state8 = "10000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state9 = "100000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state10 = "1000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state11 = "10000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state12 = "100000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<27> mmult_hw::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<32> mmult_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> mmult_hw::ap_const_lv1_0 = "0";
const sc_lv<1> mmult_hw::ap_const_lv1_1 = "1";
const sc_lv<2> mmult_hw::ap_const_lv2_0 = "00";
const sc_lv<2> mmult_hw::ap_const_lv2_2 = "10";
const sc_lv<2> mmult_hw::ap_const_lv2_3 = "11";
const sc_lv<2> mmult_hw::ap_const_lv2_1 = "1";
const sc_lv<32> mmult_hw::ap_const_lv32_2 = "10";
const sc_lv<32> mmult_hw::ap_const_lv32_5 = "101";
const sc_lv<32> mmult_hw::ap_const_lv32_8 = "1000";
const sc_lv<32> mmult_hw::ap_const_lv32_19 = "11001";
const sc_lv<32> mmult_hw::ap_const_lv32_1A = "11010";
const int mmult_hw::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mmult_hw::ap_const_lv32_1 = "1";
const sc_lv<32> mmult_hw::ap_const_lv32_3 = "11";
const sc_lv<32> mmult_hw::ap_const_lv32_4 = "100";
const sc_lv<32> mmult_hw::ap_const_lv32_6 = "110";
const sc_lv<32> mmult_hw::ap_const_lv32_7 = "111";
const sc_lv<32> mmult_hw::ap_const_lv32_9 = "1001";
const sc_lv<32> mmult_hw::ap_const_lv32_A = "1010";
const sc_lv<32> mmult_hw::ap_const_lv32_B = "1011";
const sc_lv<32> mmult_hw::ap_const_lv32_C = "1100";
const sc_lv<32> mmult_hw::ap_const_lv32_D = "1101";
const sc_lv<32> mmult_hw::ap_const_lv32_11 = "10001";
const sc_lv<32> mmult_hw::ap_const_lv32_16 = "10110";
const sc_lv<32> mmult_hw::ap_const_lv32_17 = "10111";
const sc_lv<32> mmult_hw::ap_const_lv32_18 = "11000";
const sc_lv<4> mmult_hw::ap_const_lv4_0 = "0000";
const sc_lv<3> mmult_hw::ap_const_lv3_0 = "000";
const sc_lv<11> mmult_hw::ap_const_lv11_85 = "10000101";
const sc_lv<11> mmult_hw::ap_const_lv11_5 = "101";
const sc_lv<9> mmult_hw::ap_const_lv9_0 = "000000000";
const sc_lv<12> mmult_hw::ap_const_lv12_585 = "10110000101";
const sc_lv<12> mmult_hw::ap_const_lv12_505 = "10100000101";
const sc_lv<6> mmult_hw::ap_const_lv6_5 = "101";
const sc_lv<6> mmult_hw::ap_const_lv6_0 = "000000";
const sc_lv<8> mmult_hw::ap_const_lv8_FF = "11111111";
const sc_lv<5> mmult_hw::ap_const_lv5_0 = "00000";
const sc_lv<32> mmult_hw::ap_const_lv32_12 = "10010";
const sc_lv<32> mmult_hw::ap_const_lv32_E = "1110";
const sc_lv<32> mmult_hw::ap_const_lv32_20 = "100000";
const sc_lv<32> mmult_hw::ap_const_lv32_3F = "111111";
const sc_lv<3> mmult_hw::ap_const_lv3_5 = "101";
const sc_lv<3> mmult_hw::ap_const_lv3_1 = "1";
const sc_lv<4> mmult_hw::ap_const_lv4_1 = "1";
const sc_lv<4> mmult_hw::ap_const_lv4_2 = "10";
const sc_lv<4> mmult_hw::ap_const_lv4_A = "1010";
const sc_lv<11> mmult_hw::ap_const_lv11_80 = "10000000";
const sc_lv<8> mmult_hw::ap_const_lv8_0 = "00000000";
const sc_lv<11> mmult_hw::ap_const_lv11_1 = "1";
const sc_lv<9> mmult_hw::ap_const_lv9_2 = "10";
const sc_lv<8> mmult_hw::ap_const_lv8_1 = "1";
const sc_lv<4> mmult_hw::ap_const_lv4_8 = "1000";
const sc_lv<12> mmult_hw::ap_const_lv12_80 = "10000000";
const sc_lv<12> mmult_hw::ap_const_lv12_1 = "1";
const sc_lv<9> mmult_hw::ap_const_lv9_100 = "100000000";
const sc_lv<9> mmult_hw::ap_const_lv9_1 = "1";
const sc_lv<6> mmult_hw::ap_const_lv6_1 = "1";
const sc_lv<6> mmult_hw::ap_const_lv6_28 = "101000";
const bool mmult_hw::ap_const_boolean_1 = true;

mmult_hw::mmult_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mmult_hw_CONTROL_BUS_s_axi_U = new mmult_hw_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>("mmult_hw_CONTROL_BUS_s_axi_U");
    mmult_hw_CONTROL_BUS_s_axi_U->AWVALID(s_axi_CONTROL_BUS_AWVALID);
    mmult_hw_CONTROL_BUS_s_axi_U->AWREADY(s_axi_CONTROL_BUS_AWREADY);
    mmult_hw_CONTROL_BUS_s_axi_U->AWADDR(s_axi_CONTROL_BUS_AWADDR);
    mmult_hw_CONTROL_BUS_s_axi_U->WVALID(s_axi_CONTROL_BUS_WVALID);
    mmult_hw_CONTROL_BUS_s_axi_U->WREADY(s_axi_CONTROL_BUS_WREADY);
    mmult_hw_CONTROL_BUS_s_axi_U->WDATA(s_axi_CONTROL_BUS_WDATA);
    mmult_hw_CONTROL_BUS_s_axi_U->WSTRB(s_axi_CONTROL_BUS_WSTRB);
    mmult_hw_CONTROL_BUS_s_axi_U->ARVALID(s_axi_CONTROL_BUS_ARVALID);
    mmult_hw_CONTROL_BUS_s_axi_U->ARREADY(s_axi_CONTROL_BUS_ARREADY);
    mmult_hw_CONTROL_BUS_s_axi_U->ARADDR(s_axi_CONTROL_BUS_ARADDR);
    mmult_hw_CONTROL_BUS_s_axi_U->RVALID(s_axi_CONTROL_BUS_RVALID);
    mmult_hw_CONTROL_BUS_s_axi_U->RREADY(s_axi_CONTROL_BUS_RREADY);
    mmult_hw_CONTROL_BUS_s_axi_U->RDATA(s_axi_CONTROL_BUS_RDATA);
    mmult_hw_CONTROL_BUS_s_axi_U->RRESP(s_axi_CONTROL_BUS_RRESP);
    mmult_hw_CONTROL_BUS_s_axi_U->BVALID(s_axi_CONTROL_BUS_BVALID);
    mmult_hw_CONTROL_BUS_s_axi_U->BREADY(s_axi_CONTROL_BUS_BREADY);
    mmult_hw_CONTROL_BUS_s_axi_U->BRESP(s_axi_CONTROL_BUS_BRESP);
    mmult_hw_CONTROL_BUS_s_axi_U->ACLK(ap_clk);
    mmult_hw_CONTROL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    mmult_hw_CONTROL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    mmult_hw_CONTROL_BUS_s_axi_U->ap_start(ap_start);
    mmult_hw_CONTROL_BUS_s_axi_U->interrupt(interrupt);
    mmult_hw_CONTROL_BUS_s_axi_U->ap_ready(ap_ready);
    mmult_hw_CONTROL_BUS_s_axi_U->ap_done(ap_done);
    mmult_hw_CONTROL_BUS_s_axi_U->ap_idle(ap_idle);
    offset_buf_U = new mmult_hw_offset_buf("offset_buf_U");
    offset_buf_U->clk(ap_clk);
    offset_buf_U->reset(ap_rst_n_inv);
    offset_buf_U->address0(offset_buf_address0);
    offset_buf_U->ce0(offset_buf_ce0);
    offset_buf_U->we0(offset_buf_we0);
    offset_buf_U->d0(offset_buf_d0);
    offset_buf_U->q0(offset_buf_q0);
    offset_buf_U->address1(offset_buf_address1);
    offset_buf_U->ce1(offset_buf_ce1);
    offset_buf_U->we1(offset_buf_we1);
    offset_buf_U->d1(offset_buf_d1);
    weight_buf_U = new mmult_hw_weight_buf("weight_buf_U");
    weight_buf_U->clk(ap_clk);
    weight_buf_U->reset(ap_rst_n_inv);
    weight_buf_U->address0(weight_buf_address0);
    weight_buf_U->ce0(weight_buf_ce0);
    weight_buf_U->we0(weight_buf_we0);
    weight_buf_U->d0(weight_buf_d0);
    weight_buf_U->q0(weight_buf_q0);
    weight_buf_U->address1(weight_buf_address1);
    weight_buf_U->ce1(weight_buf_ce1);
    weight_buf_U->we1(weight_buf_we1);
    weight_buf_U->d1(weight_buf_d1);
    in_buf_U = new mmult_hw_in_buf("in_buf_U");
    in_buf_U->clk(ap_clk);
    in_buf_U->reset(ap_rst_n_inv);
    in_buf_U->address0(in_buf_address0);
    in_buf_U->ce0(in_buf_ce0);
    in_buf_U->we0(in_buf_we0);
    in_buf_U->d0(in_buf_d0);
    in_buf_U->q0(in_buf_q0);
    in_buf_U->address1(in_buf_address1);
    in_buf_U->ce1(in_buf_ce1);
    in_buf_U->we1(in_buf_we1);
    in_buf_U->d1(in_buf_d1);
    out_buf_U = new mmult_hw_out_buf("out_buf_U");
    out_buf_U->clk(ap_clk);
    out_buf_U->reset(ap_rst_n_inv);
    out_buf_U->address0(out_buf_address0);
    out_buf_U->ce0(out_buf_ce0);
    out_buf_U->we0(out_buf_we0);
    out_buf_U->d0(tmp1_reg_514);
    out_buf_U->q0(out_buf_q0);
    out_buf_U->address1(out_buf_address1);
    out_buf_U->ce1(out_buf_ce1);
    out_buf_U->q1(out_buf_q1);
    mmult_hw_fadd_32nbkb_U1 = new mmult_hw_fadd_32nbkb<1,5,32,32,32>("mmult_hw_fadd_32nbkb_U1");
    mmult_hw_fadd_32nbkb_U1->clk(ap_clk);
    mmult_hw_fadd_32nbkb_U1->reset(ap_rst_n_inv);
    mmult_hw_fadd_32nbkb_U1->din0(tmp1_reg_514);
    mmult_hw_fadd_32nbkb_U1->din1(tmp_38_reg_1299);
    mmult_hw_fadd_32nbkb_U1->ce(ap_var_for_const0);
    mmult_hw_fadd_32nbkb_U1->dout(grp_fu_581_p2);
    mmult_hw_fmul_32ncud_U2 = new mmult_hw_fmul_32ncud<1,4,32,32,32>("mmult_hw_fmul_32ncud_U2");
    mmult_hw_fmul_32ncud_U2->clk(ap_clk);
    mmult_hw_fmul_32ncud_U2->reset(ap_rst_n_inv);
    mmult_hw_fmul_32ncud_U2->din0(in_buf_load_reg_1289);
    mmult_hw_fmul_32ncud_U2->din1(weight_buf_load_reg_1294);
    mmult_hw_fmul_32ncud_U2->ce(ap_var_for_const0);
    mmult_hw_fmul_32ncud_U2->dout(grp_fu_586_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state24);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( out_stream_keep_V_1_ack_in );
    sensitive << ( out_stream_strb_V_1_ack_in );
    sensitive << ( out_stream_user_V_1_ack_in );
    sensitive << ( out_stream_last_V_1_ack_in );
    sensitive << ( out_stream_id_V_1_ack_in );
    sensitive << ( out_stream_dest_V_1_ack_in );

    SC_METHOD(thread_ap_done);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( out_stream_keep_V_1_ack_in );
    sensitive << ( out_stream_strb_V_1_ack_in );
    sensitive << ( out_stream_user_V_1_ack_in );
    sensitive << ( out_stream_last_V_1_ack_in );
    sensitive << ( out_stream_id_V_1_ack_in );
    sensitive << ( out_stream_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond1_fu_991_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( out_stream_keep_V_1_ack_in );
    sensitive << ( out_stream_strb_V_1_ack_in );
    sensitive << ( out_stream_user_V_1_ack_in );
    sensitive << ( out_stream_last_V_1_ack_in );
    sensitive << ( out_stream_id_V_1_ack_in );
    sensitive << ( out_stream_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond1_fu_991_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_converter_fu_1111_p3);
    sensitive << ( tmp_34_fu_1107_p1 );
    sensitive << ( tmp_30_fu_1103_p1 );

    SC_METHOD(thread_exitcond1_fu_991_p2);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( out_stream_keep_V_1_ack_in );
    sensitive << ( out_stream_strb_V_1_ack_in );
    sensitive << ( out_stream_user_V_1_ack_in );
    sensitive << ( out_stream_last_V_1_ack_in );
    sensitive << ( out_stream_id_V_1_ack_in );
    sensitive << ( out_stream_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( i6_reg_549 );

    SC_METHOD(thread_exitcond2_fu_955_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( k_reg_503 );

    SC_METHOD(thread_exitcond3_fu_912_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j5_reg_491 );

    SC_METHOD(thread_exitcond4_fu_858_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i4_reg_480 );

    SC_METHOD(thread_exitcond5_fu_604_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( is_idx_reg_355 );

    SC_METHOD(thread_exitcond6_fu_652_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i1_reg_378 );

    SC_METHOD(thread_exitcond7_fu_785_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( indvars_iv5_reg_423 );
    sensitive << ( is_idx_4_reg_470 );

    SC_METHOD(thread_exitcond8_fu_755_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i2_reg_435 );

    SC_METHOD(thread_exitcond9_fu_682_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( indvars_iv1_reg_366 );
    sensitive << ( is_idx_2_reg_413 );

    SC_METHOD(thread_exitcond_fu_1039_p2);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( indvars_iv_reg_525 );
    sensitive << ( os_idx_1_reg_560 );

    SC_METHOD(thread_grp_fu_594_p4);
    sensitive << ( in_stream_data_V_0_data_out );

    SC_METHOD(thread_i_1_fu_646_p2);
    sensitive << ( i_reg_343 );

    SC_METHOD(thread_i_2_fu_658_p2);
    sensitive << ( i1_reg_378 );

    SC_METHOD(thread_i_3_fu_761_p2);
    sensitive << ( i2_reg_435 );

    SC_METHOD(thread_i_4_fu_864_p2);
    sensitive << ( i4_reg_480 );

    SC_METHOD(thread_i_5_fu_997_p2);
    sensitive << ( i6_reg_549 );

    SC_METHOD(thread_in_buf_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_43_cast_fu_831_p1 );
    sensitive << ( tmp_55_cast_fu_986_p1 );

    SC_METHOD(thread_in_buf_address1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_42_fu_853_p1 );

    SC_METHOD(thread_in_buf_ce0);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_in_buf_ce1);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_buf_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_33_fu_822_p1 );

    SC_METHOD(thread_in_buf_d1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_594_p4 );

    SC_METHOD(thread_in_buf_we0);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_buf_we1);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_stream_TDATA_blk_n);
    sensitive << ( in_stream_data_V_0_state );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_stream_TREADY);
    sensitive << ( in_stream_dest_V_0_state );

    SC_METHOD(thread_in_stream_data_V_0_ack_in);
    sensitive << ( in_stream_data_V_0_state );

    SC_METHOD(thread_in_stream_data_V_0_ack_out);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_stream_data_V_0_data_out);
    sensitive << ( in_stream_data_V_0_payload_A );
    sensitive << ( in_stream_data_V_0_payload_B );
    sensitive << ( in_stream_data_V_0_sel );

    SC_METHOD(thread_in_stream_data_V_0_load_A);
    sensitive << ( in_stream_data_V_0_sel_wr );
    sensitive << ( in_stream_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream_data_V_0_load_B);
    sensitive << ( in_stream_data_V_0_sel_wr );
    sensitive << ( in_stream_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream_data_V_0_sel);
    sensitive << ( in_stream_data_V_0_sel_rd );

    SC_METHOD(thread_in_stream_data_V_0_state_cmp_full);
    sensitive << ( in_stream_data_V_0_state );

    SC_METHOD(thread_in_stream_data_V_0_vld_in);
    sensitive << ( in_stream_TVALID );

    SC_METHOD(thread_in_stream_data_V_0_vld_out);
    sensitive << ( in_stream_data_V_0_state );

    SC_METHOD(thread_in_stream_dest_V_0_ack_out);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_stream_dest_V_0_vld_in);
    sensitive << ( in_stream_TVALID );

    SC_METHOD(thread_indvars_iv_next1_fu_713_p2);
    sensitive << ( indvars_iv1_reg_366 );

    SC_METHOD(thread_indvars_iv_next6_fu_816_p2);
    sensitive << ( indvars_iv5_reg_423 );

    SC_METHOD(thread_indvars_iv_next_fu_1097_p2);
    sensitive << ( indvars_iv_reg_525 );

    SC_METHOD(thread_is_idx_5_fu_767_p2);
    sensitive << ( is_idx_3_reg_447 );

    SC_METHOD(thread_is_idx_6_fu_791_p2);
    sensitive << ( is_idx_4_reg_470 );

    SC_METHOD(thread_j_1_fu_707_p2);
    sensitive << ( j_reg_402 );

    SC_METHOD(thread_j_2_fu_810_p2);
    sensitive << ( j3_reg_459 );

    SC_METHOD(thread_j_3_fu_1091_p2);
    sensitive << ( j7_reg_570 );

    SC_METHOD(thread_j_4_fu_918_p2);
    sensitive << ( j5_reg_491 );

    SC_METHOD(thread_k_1_fu_961_p2);
    sensitive << ( k_reg_503 );

    SC_METHOD(thread_last_assign_fu_1085_p2);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( exitcond_fu_1039_p2 );
    sensitive << ( tmp_36_fu_1079_p2 );

    SC_METHOD(thread_offset_buf_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_4_fu_625_p1 );
    sensitive << ( tmp_28_fu_924_p1 );

    SC_METHOD(thread_offset_buf_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_9_fu_641_p1 );

    SC_METHOD(thread_offset_buf_ce0);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_offset_buf_ce1);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_offset_buf_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_616_p1 );

    SC_METHOD(thread_offset_buf_d1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_594_p4 );

    SC_METHOD(thread_offset_buf_we0);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_offset_buf_we1);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_os_idx_2_fu_1003_p2);
    sensitive << ( os_idx_reg_537 );

    SC_METHOD(thread_out_buf_address0);
    sensitive << ( out_buf_addr_2_reg_1251 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_52_cast_fu_1054_p1 );

    SC_METHOD(thread_out_buf_address1);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_53_cast_fu_1074_p1 );

    SC_METHOD(thread_out_buf_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_out_buf_ce1);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_out_buf_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond2_fu_955_p2 );

    SC_METHOD(thread_out_stream_TDATA);
    sensitive << ( out_stream_data_V_1_data_out );

    SC_METHOD(thread_out_stream_TDATA_blk_n);
    sensitive << ( out_stream_data_V_1_state );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_out_stream_TDEST);
    sensitive << ( out_stream_dest_V_1_data_out );

    SC_METHOD(thread_out_stream_TID);
    sensitive << ( out_stream_id_V_1_data_out );

    SC_METHOD(thread_out_stream_TKEEP);
    sensitive << ( out_stream_keep_V_1_data_out );

    SC_METHOD(thread_out_stream_TLAST);
    sensitive << ( out_stream_last_V_1_data_out );

    SC_METHOD(thread_out_stream_TSTRB);
    sensitive << ( out_stream_strb_V_1_data_out );

    SC_METHOD(thread_out_stream_TUSER);
    sensitive << ( out_stream_user_V_1_data_out );

    SC_METHOD(thread_out_stream_TVALID);
    sensitive << ( out_stream_dest_V_1_state );

    SC_METHOD(thread_out_stream_data_V_1_ack_in);
    sensitive << ( out_stream_data_V_1_state );

    SC_METHOD(thread_out_stream_data_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_data_V_1_data_out);
    sensitive << ( out_stream_data_V_1_payload_A );
    sensitive << ( out_stream_data_V_1_payload_B );
    sensitive << ( out_stream_data_V_1_sel );

    SC_METHOD(thread_out_stream_data_V_1_load_A);
    sensitive << ( out_stream_data_V_1_sel_wr );
    sensitive << ( out_stream_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_data_V_1_load_B);
    sensitive << ( out_stream_data_V_1_sel_wr );
    sensitive << ( out_stream_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_data_V_1_sel);
    sensitive << ( out_stream_data_V_1_sel_rd );

    SC_METHOD(thread_out_stream_data_V_1_state_cmp_full);
    sensitive << ( out_stream_data_V_1_state );

    SC_METHOD(thread_out_stream_data_V_1_vld_in);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_stream_data_V_1_vld_out);
    sensitive << ( out_stream_data_V_1_state );

    SC_METHOD(thread_out_stream_dest_V_1_ack_in);
    sensitive << ( out_stream_dest_V_1_state );

    SC_METHOD(thread_out_stream_dest_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_dest_V_1_data_out);
    sensitive << ( out_stream_dest_V_1_sel );

    SC_METHOD(thread_out_stream_dest_V_1_sel);
    sensitive << ( out_stream_dest_V_1_sel_rd );

    SC_METHOD(thread_out_stream_dest_V_1_vld_in);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_stream_dest_V_1_vld_out);
    sensitive << ( out_stream_dest_V_1_state );

    SC_METHOD(thread_out_stream_id_V_1_ack_in);
    sensitive << ( out_stream_id_V_1_state );

    SC_METHOD(thread_out_stream_id_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_id_V_1_data_out);
    sensitive << ( out_stream_id_V_1_sel );

    SC_METHOD(thread_out_stream_id_V_1_sel);
    sensitive << ( out_stream_id_V_1_sel_rd );

    SC_METHOD(thread_out_stream_id_V_1_vld_in);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_stream_id_V_1_vld_out);
    sensitive << ( out_stream_id_V_1_state );

    SC_METHOD(thread_out_stream_keep_V_1_ack_in);
    sensitive << ( out_stream_keep_V_1_state );

    SC_METHOD(thread_out_stream_keep_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_keep_V_1_data_out);
    sensitive << ( out_stream_keep_V_1_sel );

    SC_METHOD(thread_out_stream_keep_V_1_sel);
    sensitive << ( out_stream_keep_V_1_sel_rd );

    SC_METHOD(thread_out_stream_keep_V_1_vld_in);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_stream_keep_V_1_vld_out);
    sensitive << ( out_stream_keep_V_1_state );

    SC_METHOD(thread_out_stream_last_V_1_ack_in);
    sensitive << ( out_stream_last_V_1_state );

    SC_METHOD(thread_out_stream_last_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_last_V_1_data_out);
    sensitive << ( out_stream_last_V_1_payload_A );
    sensitive << ( out_stream_last_V_1_payload_B );
    sensitive << ( out_stream_last_V_1_sel );

    SC_METHOD(thread_out_stream_last_V_1_load_A);
    sensitive << ( out_stream_last_V_1_sel_wr );
    sensitive << ( out_stream_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_last_V_1_load_B);
    sensitive << ( out_stream_last_V_1_sel_wr );
    sensitive << ( out_stream_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_last_V_1_sel);
    sensitive << ( out_stream_last_V_1_sel_rd );

    SC_METHOD(thread_out_stream_last_V_1_state_cmp_full);
    sensitive << ( out_stream_last_V_1_state );

    SC_METHOD(thread_out_stream_last_V_1_vld_in);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_stream_last_V_1_vld_out);
    sensitive << ( out_stream_last_V_1_state );

    SC_METHOD(thread_out_stream_strb_V_1_ack_in);
    sensitive << ( out_stream_strb_V_1_state );

    SC_METHOD(thread_out_stream_strb_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_strb_V_1_data_out);
    sensitive << ( out_stream_strb_V_1_sel );

    SC_METHOD(thread_out_stream_strb_V_1_sel);
    sensitive << ( out_stream_strb_V_1_sel_rd );

    SC_METHOD(thread_out_stream_strb_V_1_vld_in);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_stream_strb_V_1_vld_out);
    sensitive << ( out_stream_strb_V_1_state );

    SC_METHOD(thread_out_stream_user_V_1_ack_in);
    sensitive << ( out_stream_user_V_1_state );

    SC_METHOD(thread_out_stream_user_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_user_V_1_data_out);
    sensitive << ( out_stream_user_V_1_sel );

    SC_METHOD(thread_out_stream_user_V_1_sel);
    sensitive << ( out_stream_user_V_1_sel_rd );

    SC_METHOD(thread_out_stream_user_V_1_vld_in);
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_out_stream_user_V_1_vld_out);
    sensitive << ( out_stream_user_V_1_state );

    SC_METHOD(thread_p_shl1_cast_fu_902_p1);
    sensitive << ( tmp_27_fu_894_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_1017_p1);
    sensitive << ( tmp_43_fu_1009_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_1029_p1);
    sensitive << ( tmp_44_fu_1021_p3 );

    SC_METHOD(thread_p_shl_cast_fu_890_p1);
    sensitive << ( tmp_26_fu_882_p3 );

    SC_METHOD(thread_tmp_11_fu_688_p2);
    sensitive << ( is_idx_2_reg_413 );

    SC_METHOD(thread_tmp_12_fu_773_p3);
    sensitive << ( i2_reg_435 );

    SC_METHOD(thread_tmp_13_cast_fu_694_p1);
    sensitive << ( j_reg_402 );

    SC_METHOD(thread_tmp_13_fu_719_p1);
    sensitive << ( in_stream_data_V_0_data_out );

    SC_METHOD(thread_tmp_14_cast_fu_781_p1);
    sensitive << ( tmp_12_fu_773_p3 );

    SC_METHOD(thread_tmp_14_fu_698_p2);
    sensitive << ( tmp_5_cast_reg_1146 );
    sensitive << ( tmp_13_cast_fu_694_p1 );

    SC_METHOD(thread_tmp_17_fu_737_p2);
    sensitive << ( tmp_18_reg_1164 );

    SC_METHOD(thread_tmp_18_cast_fu_728_p1);
    sensitive << ( tmp_14_reg_1159 );

    SC_METHOD(thread_tmp_18_fu_703_p1);
    sensitive << ( j_reg_402 );

    SC_METHOD(thread_tmp_19_fu_742_p3);
    sensitive << ( i1_reg_378 );
    sensitive << ( tmp_17_fu_737_p2 );

    SC_METHOD(thread_tmp_1_fu_670_p3);
    sensitive << ( i1_reg_378 );

    SC_METHOD(thread_tmp_21_cast_fu_797_p1);
    sensitive << ( j3_reg_459 );

    SC_METHOD(thread_tmp_21_fu_750_p1);
    sensitive << ( tmp_19_fu_742_p3 );

    SC_METHOD(thread_tmp_22_fu_870_p3);
    sensitive << ( i4_reg_480 );

    SC_METHOD(thread_tmp_25_fu_840_p2);
    sensitive << ( tmp_40_reg_1210 );

    SC_METHOD(thread_tmp_26_fu_882_p3);
    sensitive << ( i4_reg_480 );

    SC_METHOD(thread_tmp_27_cast_fu_878_p1);
    sensitive << ( tmp_22_fu_870_p3 );

    SC_METHOD(thread_tmp_27_fu_894_p3);
    sensitive << ( i4_reg_480 );

    SC_METHOD(thread_tmp_28_cast_fu_929_p1);
    sensitive << ( j5_reg_491 );

    SC_METHOD(thread_tmp_28_fu_924_p1);
    sensitive << ( j5_reg_491 );

    SC_METHOD(thread_tmp_29_cast_fu_1045_p1);
    sensitive << ( j7_reg_570 );

    SC_METHOD(thread_tmp_29_fu_906_p2);
    sensitive << ( p_shl1_cast_fu_902_p1 );
    sensitive << ( p_shl_cast_fu_890_p1 );

    SC_METHOD(thread_tmp_2_fu_610_p2);
    sensitive << ( is_idx_reg_355 );

    SC_METHOD(thread_tmp_30_fu_1103_p1);
    sensitive << ( out_buf_q0 );

    SC_METHOD(thread_tmp_32_fu_1059_p2);
    sensitive << ( j7_reg_570 );

    SC_METHOD(thread_tmp_33_cast_fu_1065_p1);
    sensitive << ( tmp_32_fu_1059_p2 );

    SC_METHOD(thread_tmp_33_fu_822_p1);
    sensitive << ( in_stream_data_V_0_data_out );

    SC_METHOD(thread_tmp_34_fu_1107_p1);
    sensitive << ( out_buf_q1 );

    SC_METHOD(thread_tmp_36_fu_1079_p2);
    sensitive << ( os_idx_1_reg_560 );

    SC_METHOD(thread_tmp_37_cast_fu_967_p1);
    sensitive << ( k_reg_503 );

    SC_METHOD(thread_tmp_37_fu_801_p2);
    sensitive << ( tmp_14_cast_reg_1192 );
    sensitive << ( tmp_21_cast_fu_797_p1 );

    SC_METHOD(thread_tmp_40_fu_806_p1);
    sensitive << ( j3_reg_459 );

    SC_METHOD(thread_tmp_41_fu_845_p3);
    sensitive << ( i2_reg_435 );
    sensitive << ( tmp_25_fu_840_p2 );

    SC_METHOD(thread_tmp_42_fu_853_p1);
    sensitive << ( tmp_41_fu_845_p3 );

    SC_METHOD(thread_tmp_43_cast_fu_831_p1);
    sensitive << ( tmp_37_reg_1205 );

    SC_METHOD(thread_tmp_43_fu_1009_p3);
    sensitive << ( i6_reg_549 );

    SC_METHOD(thread_tmp_44_fu_1021_p3);
    sensitive << ( i6_reg_549 );

    SC_METHOD(thread_tmp_45_fu_1033_p2);
    sensitive << ( p_shl3_cast_fu_1029_p1 );
    sensitive << ( p_shl2_cast_fu_1017_p1 );

    SC_METHOD(thread_tmp_46_fu_943_p3);
    sensitive << ( j5_reg_491 );

    SC_METHOD(thread_tmp_47_fu_933_p2);
    sensitive << ( tmp_29_reg_1238 );
    sensitive << ( tmp_28_cast_fu_929_p1 );

    SC_METHOD(thread_tmp_48_fu_1049_p2);
    sensitive << ( tmp_45_reg_1322 );
    sensitive << ( tmp_29_cast_fu_1045_p1 );

    SC_METHOD(thread_tmp_49_fu_1069_p2);
    sensitive << ( tmp_45_reg_1322 );
    sensitive << ( tmp_33_cast_fu_1065_p1 );

    SC_METHOD(thread_tmp_4_fu_625_p1);
    sensitive << ( i_reg_343 );

    SC_METHOD(thread_tmp_50_cast_fu_951_p1);
    sensitive << ( tmp_46_fu_943_p3 );

    SC_METHOD(thread_tmp_50_fu_971_p2);
    sensitive << ( tmp_50_cast_reg_1261 );
    sensitive << ( tmp_37_cast_fu_967_p1 );

    SC_METHOD(thread_tmp_51_cast_fu_938_p1);
    sensitive << ( tmp_47_fu_933_p2 );

    SC_METHOD(thread_tmp_51_fu_981_p2);
    sensitive << ( tmp_27_cast_reg_1233 );
    sensitive << ( tmp_37_cast_fu_967_p1 );

    SC_METHOD(thread_tmp_52_cast_fu_1054_p1);
    sensitive << ( tmp_48_fu_1049_p2 );

    SC_METHOD(thread_tmp_53_cast_fu_1074_p1);
    sensitive << ( tmp_49_fu_1069_p2 );

    SC_METHOD(thread_tmp_54_cast_fu_976_p1);
    sensitive << ( tmp_50_fu_971_p2 );

    SC_METHOD(thread_tmp_55_cast_fu_986_p1);
    sensitive << ( tmp_51_fu_981_p2 );

    SC_METHOD(thread_tmp_5_cast_fu_678_p1);
    sensitive << ( tmp_1_fu_670_p3 );

    SC_METHOD(thread_tmp_5_fu_616_p1);
    sensitive << ( in_stream_data_V_0_data_out );

    SC_METHOD(thread_tmp_8_fu_635_p2);
    sensitive << ( i_reg_343 );

    SC_METHOD(thread_tmp_9_fu_641_p1);
    sensitive << ( tmp_8_fu_635_p2 );

    SC_METHOD(thread_tmp_s_fu_664_p2);
    sensitive << ( is_idx_1_reg_390 );

    SC_METHOD(thread_weight_buf_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_18_cast_fu_728_p1 );
    sensitive << ( tmp_54_cast_fu_976_p1 );

    SC_METHOD(thread_weight_buf_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_21_fu_750_p1 );

    SC_METHOD(thread_weight_buf_ce0);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_weight_buf_ce1);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weight_buf_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_fu_719_p1 );

    SC_METHOD(thread_weight_buf_d1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_fu_594_p4 );

    SC_METHOD(thread_weight_buf_we0);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weight_buf_we1);
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_stream_data_V_0_vld_out );
    sensitive << ( out_stream_data_V_1_ack_in );
    sensitive << ( out_stream_keep_V_1_ack_in );
    sensitive << ( out_stream_strb_V_1_ack_in );
    sensitive << ( out_stream_user_V_1_ack_in );
    sensitive << ( out_stream_last_V_1_ack_in );
    sensitive << ( out_stream_id_V_1_ack_in );
    sensitive << ( out_stream_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond6_fu_652_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond9_fu_682_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond8_fu_755_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond7_fu_785_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond4_fu_858_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond3_fu_912_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond2_fu_955_p2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond1_fu_991_p2 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( exitcond_fu_1039_p2 );
    sensitive << ( exitcond5_fu_604_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000001";
    in_stream_data_V_0_sel_rd = SC_LOGIC_0;
    in_stream_data_V_0_sel_wr = SC_LOGIC_0;
    in_stream_data_V_0_state = "00";
    in_stream_dest_V_0_state = "00";
    out_stream_data_V_1_sel_rd = SC_LOGIC_0;
    out_stream_data_V_1_sel_wr = SC_LOGIC_0;
    out_stream_data_V_1_state = "00";
    out_stream_keep_V_1_sel_rd = SC_LOGIC_0;
    out_stream_keep_V_1_state = "00";
    out_stream_strb_V_1_sel_rd = SC_LOGIC_0;
    out_stream_strb_V_1_state = "00";
    out_stream_user_V_1_sel_rd = SC_LOGIC_0;
    out_stream_user_V_1_state = "00";
    out_stream_last_V_1_sel_rd = SC_LOGIC_0;
    out_stream_last_V_1_sel_wr = SC_LOGIC_0;
    out_stream_last_V_1_state = "00";
    out_stream_id_V_1_sel_rd = SC_LOGIC_0;
    out_stream_id_V_1_state = "00";
    out_stream_dest_V_1_sel_rd = SC_LOGIC_0;
    out_stream_dest_V_1_state = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mmult_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_stream_TDATA, "(port)in_stream_TDATA");
    sc_trace(mVcdFile, in_stream_TVALID, "(port)in_stream_TVALID");
    sc_trace(mVcdFile, in_stream_TREADY, "(port)in_stream_TREADY");
    sc_trace(mVcdFile, in_stream_TKEEP, "(port)in_stream_TKEEP");
    sc_trace(mVcdFile, in_stream_TSTRB, "(port)in_stream_TSTRB");
    sc_trace(mVcdFile, in_stream_TUSER, "(port)in_stream_TUSER");
    sc_trace(mVcdFile, in_stream_TLAST, "(port)in_stream_TLAST");
    sc_trace(mVcdFile, in_stream_TID, "(port)in_stream_TID");
    sc_trace(mVcdFile, in_stream_TDEST, "(port)in_stream_TDEST");
    sc_trace(mVcdFile, out_stream_TDATA, "(port)out_stream_TDATA");
    sc_trace(mVcdFile, out_stream_TVALID, "(port)out_stream_TVALID");
    sc_trace(mVcdFile, out_stream_TREADY, "(port)out_stream_TREADY");
    sc_trace(mVcdFile, out_stream_TKEEP, "(port)out_stream_TKEEP");
    sc_trace(mVcdFile, out_stream_TSTRB, "(port)out_stream_TSTRB");
    sc_trace(mVcdFile, out_stream_TUSER, "(port)out_stream_TUSER");
    sc_trace(mVcdFile, out_stream_TLAST, "(port)out_stream_TLAST");
    sc_trace(mVcdFile, out_stream_TID, "(port)out_stream_TID");
    sc_trace(mVcdFile, out_stream_TDEST, "(port)out_stream_TDEST");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWVALID, "(port)s_axi_CONTROL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWREADY, "(port)s_axi_CONTROL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWADDR, "(port)s_axi_CONTROL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WVALID, "(port)s_axi_CONTROL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WREADY, "(port)s_axi_CONTROL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WDATA, "(port)s_axi_CONTROL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WSTRB, "(port)s_axi_CONTROL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARVALID, "(port)s_axi_CONTROL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARREADY, "(port)s_axi_CONTROL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARADDR, "(port)s_axi_CONTROL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RVALID, "(port)s_axi_CONTROL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RREADY, "(port)s_axi_CONTROL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RDATA, "(port)s_axi_CONTROL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RRESP, "(port)s_axi_CONTROL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BVALID, "(port)s_axi_CONTROL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BREADY, "(port)s_axi_CONTROL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BRESP, "(port)s_axi_CONTROL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_stream_data_V_0_data_out, "in_stream_data_V_0_data_out");
    sc_trace(mVcdFile, in_stream_data_V_0_vld_in, "in_stream_data_V_0_vld_in");
    sc_trace(mVcdFile, in_stream_data_V_0_vld_out, "in_stream_data_V_0_vld_out");
    sc_trace(mVcdFile, in_stream_data_V_0_ack_in, "in_stream_data_V_0_ack_in");
    sc_trace(mVcdFile, in_stream_data_V_0_ack_out, "in_stream_data_V_0_ack_out");
    sc_trace(mVcdFile, in_stream_data_V_0_payload_A, "in_stream_data_V_0_payload_A");
    sc_trace(mVcdFile, in_stream_data_V_0_payload_B, "in_stream_data_V_0_payload_B");
    sc_trace(mVcdFile, in_stream_data_V_0_sel_rd, "in_stream_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_stream_data_V_0_sel_wr, "in_stream_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_stream_data_V_0_sel, "in_stream_data_V_0_sel");
    sc_trace(mVcdFile, in_stream_data_V_0_load_A, "in_stream_data_V_0_load_A");
    sc_trace(mVcdFile, in_stream_data_V_0_load_B, "in_stream_data_V_0_load_B");
    sc_trace(mVcdFile, in_stream_data_V_0_state, "in_stream_data_V_0_state");
    sc_trace(mVcdFile, in_stream_data_V_0_state_cmp_full, "in_stream_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_stream_dest_V_0_vld_in, "in_stream_dest_V_0_vld_in");
    sc_trace(mVcdFile, in_stream_dest_V_0_ack_out, "in_stream_dest_V_0_ack_out");
    sc_trace(mVcdFile, in_stream_dest_V_0_state, "in_stream_dest_V_0_state");
    sc_trace(mVcdFile, out_stream_data_V_1_data_out, "out_stream_data_V_1_data_out");
    sc_trace(mVcdFile, out_stream_data_V_1_vld_in, "out_stream_data_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_data_V_1_vld_out, "out_stream_data_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_data_V_1_ack_in, "out_stream_data_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_data_V_1_ack_out, "out_stream_data_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_data_V_1_payload_A, "out_stream_data_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_data_V_1_payload_B, "out_stream_data_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_data_V_1_sel_rd, "out_stream_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_data_V_1_sel_wr, "out_stream_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_data_V_1_sel, "out_stream_data_V_1_sel");
    sc_trace(mVcdFile, out_stream_data_V_1_load_A, "out_stream_data_V_1_load_A");
    sc_trace(mVcdFile, out_stream_data_V_1_load_B, "out_stream_data_V_1_load_B");
    sc_trace(mVcdFile, out_stream_data_V_1_state, "out_stream_data_V_1_state");
    sc_trace(mVcdFile, out_stream_data_V_1_state_cmp_full, "out_stream_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_keep_V_1_data_out, "out_stream_keep_V_1_data_out");
    sc_trace(mVcdFile, out_stream_keep_V_1_vld_in, "out_stream_keep_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_keep_V_1_vld_out, "out_stream_keep_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_keep_V_1_ack_in, "out_stream_keep_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_keep_V_1_ack_out, "out_stream_keep_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_keep_V_1_sel_rd, "out_stream_keep_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_keep_V_1_sel, "out_stream_keep_V_1_sel");
    sc_trace(mVcdFile, out_stream_keep_V_1_state, "out_stream_keep_V_1_state");
    sc_trace(mVcdFile, out_stream_strb_V_1_data_out, "out_stream_strb_V_1_data_out");
    sc_trace(mVcdFile, out_stream_strb_V_1_vld_in, "out_stream_strb_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_strb_V_1_vld_out, "out_stream_strb_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_strb_V_1_ack_in, "out_stream_strb_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_strb_V_1_ack_out, "out_stream_strb_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_strb_V_1_sel_rd, "out_stream_strb_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_strb_V_1_sel, "out_stream_strb_V_1_sel");
    sc_trace(mVcdFile, out_stream_strb_V_1_state, "out_stream_strb_V_1_state");
    sc_trace(mVcdFile, out_stream_user_V_1_data_out, "out_stream_user_V_1_data_out");
    sc_trace(mVcdFile, out_stream_user_V_1_vld_in, "out_stream_user_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_user_V_1_vld_out, "out_stream_user_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_user_V_1_ack_in, "out_stream_user_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_user_V_1_ack_out, "out_stream_user_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_user_V_1_sel_rd, "out_stream_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_user_V_1_sel, "out_stream_user_V_1_sel");
    sc_trace(mVcdFile, out_stream_user_V_1_state, "out_stream_user_V_1_state");
    sc_trace(mVcdFile, out_stream_last_V_1_data_out, "out_stream_last_V_1_data_out");
    sc_trace(mVcdFile, out_stream_last_V_1_vld_in, "out_stream_last_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_last_V_1_vld_out, "out_stream_last_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_last_V_1_ack_in, "out_stream_last_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_last_V_1_ack_out, "out_stream_last_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_last_V_1_payload_A, "out_stream_last_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_last_V_1_payload_B, "out_stream_last_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_last_V_1_sel_rd, "out_stream_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_last_V_1_sel_wr, "out_stream_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_last_V_1_sel, "out_stream_last_V_1_sel");
    sc_trace(mVcdFile, out_stream_last_V_1_load_A, "out_stream_last_V_1_load_A");
    sc_trace(mVcdFile, out_stream_last_V_1_load_B, "out_stream_last_V_1_load_B");
    sc_trace(mVcdFile, out_stream_last_V_1_state, "out_stream_last_V_1_state");
    sc_trace(mVcdFile, out_stream_last_V_1_state_cmp_full, "out_stream_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_id_V_1_data_out, "out_stream_id_V_1_data_out");
    sc_trace(mVcdFile, out_stream_id_V_1_vld_in, "out_stream_id_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_id_V_1_vld_out, "out_stream_id_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_id_V_1_ack_in, "out_stream_id_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_id_V_1_ack_out, "out_stream_id_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_id_V_1_sel_rd, "out_stream_id_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_id_V_1_sel, "out_stream_id_V_1_sel");
    sc_trace(mVcdFile, out_stream_id_V_1_state, "out_stream_id_V_1_state");
    sc_trace(mVcdFile, out_stream_dest_V_1_data_out, "out_stream_dest_V_1_data_out");
    sc_trace(mVcdFile, out_stream_dest_V_1_vld_in, "out_stream_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_dest_V_1_vld_out, "out_stream_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_dest_V_1_ack_in, "out_stream_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_dest_V_1_ack_out, "out_stream_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_dest_V_1_sel_rd, "out_stream_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_dest_V_1_sel, "out_stream_dest_V_1_sel");
    sc_trace(mVcdFile, out_stream_dest_V_1_state, "out_stream_dest_V_1_state");
    sc_trace(mVcdFile, in_stream_TDATA_blk_n, "in_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, out_stream_TDATA_blk_n, "out_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, tmp_2_fu_610_p2, "tmp_2_fu_610_p2");
    sc_trace(mVcdFile, tmp_2_reg_1123, "tmp_2_reg_1123");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_646_p2, "i_1_fu_646_p2");
    sc_trace(mVcdFile, i_2_fu_658_p2, "i_2_fu_658_p2");
    sc_trace(mVcdFile, i_2_reg_1136, "i_2_reg_1136");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_s_fu_664_p2, "tmp_s_fu_664_p2");
    sc_trace(mVcdFile, tmp_s_reg_1141, "tmp_s_reg_1141");
    sc_trace(mVcdFile, exitcond6_fu_652_p2, "exitcond6_fu_652_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_678_p1, "tmp_5_cast_fu_678_p1");
    sc_trace(mVcdFile, tmp_5_cast_reg_1146, "tmp_5_cast_reg_1146");
    sc_trace(mVcdFile, tmp_11_fu_688_p2, "tmp_11_fu_688_p2");
    sc_trace(mVcdFile, tmp_11_reg_1154, "tmp_11_reg_1154");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond9_fu_682_p2, "exitcond9_fu_682_p2");
    sc_trace(mVcdFile, tmp_14_fu_698_p2, "tmp_14_fu_698_p2");
    sc_trace(mVcdFile, tmp_14_reg_1159, "tmp_14_reg_1159");
    sc_trace(mVcdFile, tmp_18_fu_703_p1, "tmp_18_fu_703_p1");
    sc_trace(mVcdFile, tmp_18_reg_1164, "tmp_18_reg_1164");
    sc_trace(mVcdFile, j_1_fu_707_p2, "j_1_fu_707_p2");
    sc_trace(mVcdFile, j_1_reg_1169, "j_1_reg_1169");
    sc_trace(mVcdFile, indvars_iv_next1_fu_713_p2, "indvars_iv_next1_fu_713_p2");
    sc_trace(mVcdFile, i_3_fu_761_p2, "i_3_fu_761_p2");
    sc_trace(mVcdFile, i_3_reg_1182, "i_3_reg_1182");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, is_idx_5_fu_767_p2, "is_idx_5_fu_767_p2");
    sc_trace(mVcdFile, is_idx_5_reg_1187, "is_idx_5_reg_1187");
    sc_trace(mVcdFile, exitcond8_fu_755_p2, "exitcond8_fu_755_p2");
    sc_trace(mVcdFile, tmp_14_cast_fu_781_p1, "tmp_14_cast_fu_781_p1");
    sc_trace(mVcdFile, tmp_14_cast_reg_1192, "tmp_14_cast_reg_1192");
    sc_trace(mVcdFile, is_idx_6_fu_791_p2, "is_idx_6_fu_791_p2");
    sc_trace(mVcdFile, is_idx_6_reg_1200, "is_idx_6_reg_1200");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, exitcond7_fu_785_p2, "exitcond7_fu_785_p2");
    sc_trace(mVcdFile, tmp_37_fu_801_p2, "tmp_37_fu_801_p2");
    sc_trace(mVcdFile, tmp_37_reg_1205, "tmp_37_reg_1205");
    sc_trace(mVcdFile, tmp_40_fu_806_p1, "tmp_40_fu_806_p1");
    sc_trace(mVcdFile, tmp_40_reg_1210, "tmp_40_reg_1210");
    sc_trace(mVcdFile, j_2_fu_810_p2, "j_2_fu_810_p2");
    sc_trace(mVcdFile, j_2_reg_1215, "j_2_reg_1215");
    sc_trace(mVcdFile, indvars_iv_next6_fu_816_p2, "indvars_iv_next6_fu_816_p2");
    sc_trace(mVcdFile, i_4_fu_864_p2, "i_4_fu_864_p2");
    sc_trace(mVcdFile, i_4_reg_1228, "i_4_reg_1228");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_27_cast_fu_878_p1, "tmp_27_cast_fu_878_p1");
    sc_trace(mVcdFile, tmp_27_cast_reg_1233, "tmp_27_cast_reg_1233");
    sc_trace(mVcdFile, exitcond4_fu_858_p2, "exitcond4_fu_858_p2");
    sc_trace(mVcdFile, tmp_29_fu_906_p2, "tmp_29_fu_906_p2");
    sc_trace(mVcdFile, tmp_29_reg_1238, "tmp_29_reg_1238");
    sc_trace(mVcdFile, j_4_fu_918_p2, "j_4_fu_918_p2");
    sc_trace(mVcdFile, j_4_reg_1246, "j_4_reg_1246");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, out_buf_addr_2_reg_1251, "out_buf_addr_2_reg_1251");
    sc_trace(mVcdFile, exitcond3_fu_912_p2, "exitcond3_fu_912_p2");
    sc_trace(mVcdFile, tmp_50_cast_fu_951_p1, "tmp_50_cast_fu_951_p1");
    sc_trace(mVcdFile, tmp_50_cast_reg_1261, "tmp_50_cast_reg_1261");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, offset_buf_q0, "offset_buf_q0");
    sc_trace(mVcdFile, k_1_fu_961_p2, "k_1_fu_961_p2");
    sc_trace(mVcdFile, k_1_reg_1274, "k_1_reg_1274");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond2_fu_955_p2, "exitcond2_fu_955_p2");
    sc_trace(mVcdFile, in_buf_q0, "in_buf_q0");
    sc_trace(mVcdFile, in_buf_load_reg_1289, "in_buf_load_reg_1289");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, weight_buf_q0, "weight_buf_q0");
    sc_trace(mVcdFile, weight_buf_load_reg_1294, "weight_buf_load_reg_1294");
    sc_trace(mVcdFile, grp_fu_586_p2, "grp_fu_586_p2");
    sc_trace(mVcdFile, tmp_38_reg_1299, "tmp_38_reg_1299");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_581_p2, "grp_fu_581_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, i_5_fu_997_p2, "i_5_fu_997_p2");
    sc_trace(mVcdFile, i_5_reg_1312, "i_5_reg_1312");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_block_state24, "ap_block_state24");
    sc_trace(mVcdFile, os_idx_2_fu_1003_p2, "os_idx_2_fu_1003_p2");
    sc_trace(mVcdFile, os_idx_2_reg_1317, "os_idx_2_reg_1317");
    sc_trace(mVcdFile, exitcond1_fu_991_p2, "exitcond1_fu_991_p2");
    sc_trace(mVcdFile, tmp_45_fu_1033_p2, "tmp_45_fu_1033_p2");
    sc_trace(mVcdFile, tmp_45_reg_1322, "tmp_45_reg_1322");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, exitcond_fu_1039_p2, "exitcond_fu_1039_p2");
    sc_trace(mVcdFile, tmp_36_fu_1079_p2, "tmp_36_fu_1079_p2");
    sc_trace(mVcdFile, tmp_36_reg_1341, "tmp_36_reg_1341");
    sc_trace(mVcdFile, last_assign_fu_1085_p2, "last_assign_fu_1085_p2");
    sc_trace(mVcdFile, last_assign_reg_1346, "last_assign_reg_1346");
    sc_trace(mVcdFile, j_3_fu_1091_p2, "j_3_fu_1091_p2");
    sc_trace(mVcdFile, j_3_reg_1351, "j_3_reg_1351");
    sc_trace(mVcdFile, indvars_iv_next_fu_1097_p2, "indvars_iv_next_fu_1097_p2");
    sc_trace(mVcdFile, converter_fu_1111_p3, "converter_fu_1111_p3");
    sc_trace(mVcdFile, offset_buf_address0, "offset_buf_address0");
    sc_trace(mVcdFile, offset_buf_ce0, "offset_buf_ce0");
    sc_trace(mVcdFile, offset_buf_we0, "offset_buf_we0");
    sc_trace(mVcdFile, offset_buf_d0, "offset_buf_d0");
    sc_trace(mVcdFile, offset_buf_address1, "offset_buf_address1");
    sc_trace(mVcdFile, offset_buf_ce1, "offset_buf_ce1");
    sc_trace(mVcdFile, offset_buf_we1, "offset_buf_we1");
    sc_trace(mVcdFile, offset_buf_d1, "offset_buf_d1");
    sc_trace(mVcdFile, weight_buf_address0, "weight_buf_address0");
    sc_trace(mVcdFile, weight_buf_ce0, "weight_buf_ce0");
    sc_trace(mVcdFile, weight_buf_we0, "weight_buf_we0");
    sc_trace(mVcdFile, weight_buf_d0, "weight_buf_d0");
    sc_trace(mVcdFile, weight_buf_address1, "weight_buf_address1");
    sc_trace(mVcdFile, weight_buf_ce1, "weight_buf_ce1");
    sc_trace(mVcdFile, weight_buf_we1, "weight_buf_we1");
    sc_trace(mVcdFile, weight_buf_d1, "weight_buf_d1");
    sc_trace(mVcdFile, in_buf_address0, "in_buf_address0");
    sc_trace(mVcdFile, in_buf_ce0, "in_buf_ce0");
    sc_trace(mVcdFile, in_buf_we0, "in_buf_we0");
    sc_trace(mVcdFile, in_buf_d0, "in_buf_d0");
    sc_trace(mVcdFile, in_buf_address1, "in_buf_address1");
    sc_trace(mVcdFile, in_buf_ce1, "in_buf_ce1");
    sc_trace(mVcdFile, in_buf_we1, "in_buf_we1");
    sc_trace(mVcdFile, in_buf_d1, "in_buf_d1");
    sc_trace(mVcdFile, out_buf_address0, "out_buf_address0");
    sc_trace(mVcdFile, out_buf_ce0, "out_buf_ce0");
    sc_trace(mVcdFile, out_buf_we0, "out_buf_we0");
    sc_trace(mVcdFile, out_buf_q0, "out_buf_q0");
    sc_trace(mVcdFile, out_buf_address1, "out_buf_address1");
    sc_trace(mVcdFile, out_buf_ce1, "out_buf_ce1");
    sc_trace(mVcdFile, out_buf_q1, "out_buf_q1");
    sc_trace(mVcdFile, i_reg_343, "i_reg_343");
    sc_trace(mVcdFile, is_idx_reg_355, "is_idx_reg_355");
    sc_trace(mVcdFile, indvars_iv1_reg_366, "indvars_iv1_reg_366");
    sc_trace(mVcdFile, exitcond5_fu_604_p2, "exitcond5_fu_604_p2");
    sc_trace(mVcdFile, i1_reg_378, "i1_reg_378");
    sc_trace(mVcdFile, is_idx_1_reg_390, "is_idx_1_reg_390");
    sc_trace(mVcdFile, j_reg_402, "j_reg_402");
    sc_trace(mVcdFile, is_idx_2_reg_413, "is_idx_2_reg_413");
    sc_trace(mVcdFile, indvars_iv5_reg_423, "indvars_iv5_reg_423");
    sc_trace(mVcdFile, i2_reg_435, "i2_reg_435");
    sc_trace(mVcdFile, is_idx_3_reg_447, "is_idx_3_reg_447");
    sc_trace(mVcdFile, j3_reg_459, "j3_reg_459");
    sc_trace(mVcdFile, is_idx_4_reg_470, "is_idx_4_reg_470");
    sc_trace(mVcdFile, i4_reg_480, "i4_reg_480");
    sc_trace(mVcdFile, j5_reg_491, "j5_reg_491");
    sc_trace(mVcdFile, k_reg_503, "k_reg_503");
    sc_trace(mVcdFile, tmp1_reg_514, "tmp1_reg_514");
    sc_trace(mVcdFile, indvars_iv_reg_525, "indvars_iv_reg_525");
    sc_trace(mVcdFile, os_idx_reg_537, "os_idx_reg_537");
    sc_trace(mVcdFile, i6_reg_549, "i6_reg_549");
    sc_trace(mVcdFile, os_idx_1_reg_560, "os_idx_1_reg_560");
    sc_trace(mVcdFile, j7_reg_570, "j7_reg_570");
    sc_trace(mVcdFile, tmp_4_fu_625_p1, "tmp_4_fu_625_p1");
    sc_trace(mVcdFile, tmp_9_fu_641_p1, "tmp_9_fu_641_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_728_p1, "tmp_18_cast_fu_728_p1");
    sc_trace(mVcdFile, tmp_21_fu_750_p1, "tmp_21_fu_750_p1");
    sc_trace(mVcdFile, tmp_43_cast_fu_831_p1, "tmp_43_cast_fu_831_p1");
    sc_trace(mVcdFile, tmp_42_fu_853_p1, "tmp_42_fu_853_p1");
    sc_trace(mVcdFile, tmp_51_cast_fu_938_p1, "tmp_51_cast_fu_938_p1");
    sc_trace(mVcdFile, tmp_28_fu_924_p1, "tmp_28_fu_924_p1");
    sc_trace(mVcdFile, tmp_54_cast_fu_976_p1, "tmp_54_cast_fu_976_p1");
    sc_trace(mVcdFile, tmp_55_cast_fu_986_p1, "tmp_55_cast_fu_986_p1");
    sc_trace(mVcdFile, tmp_52_cast_fu_1054_p1, "tmp_52_cast_fu_1054_p1");
    sc_trace(mVcdFile, tmp_53_cast_fu_1074_p1, "tmp_53_cast_fu_1074_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_5_fu_616_p1, "tmp_5_fu_616_p1");
    sc_trace(mVcdFile, grp_fu_594_p4, "grp_fu_594_p4");
    sc_trace(mVcdFile, tmp_8_fu_635_p2, "tmp_8_fu_635_p2");
    sc_trace(mVcdFile, tmp_1_fu_670_p3, "tmp_1_fu_670_p3");
    sc_trace(mVcdFile, tmp_13_cast_fu_694_p1, "tmp_13_cast_fu_694_p1");
    sc_trace(mVcdFile, tmp_13_fu_719_p1, "tmp_13_fu_719_p1");
    sc_trace(mVcdFile, tmp_17_fu_737_p2, "tmp_17_fu_737_p2");
    sc_trace(mVcdFile, tmp_19_fu_742_p3, "tmp_19_fu_742_p3");
    sc_trace(mVcdFile, tmp_12_fu_773_p3, "tmp_12_fu_773_p3");
    sc_trace(mVcdFile, tmp_21_cast_fu_797_p1, "tmp_21_cast_fu_797_p1");
    sc_trace(mVcdFile, tmp_33_fu_822_p1, "tmp_33_fu_822_p1");
    sc_trace(mVcdFile, tmp_25_fu_840_p2, "tmp_25_fu_840_p2");
    sc_trace(mVcdFile, tmp_41_fu_845_p3, "tmp_41_fu_845_p3");
    sc_trace(mVcdFile, tmp_22_fu_870_p3, "tmp_22_fu_870_p3");
    sc_trace(mVcdFile, tmp_26_fu_882_p3, "tmp_26_fu_882_p3");
    sc_trace(mVcdFile, tmp_27_fu_894_p3, "tmp_27_fu_894_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_902_p1, "p_shl1_cast_fu_902_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_890_p1, "p_shl_cast_fu_890_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_929_p1, "tmp_28_cast_fu_929_p1");
    sc_trace(mVcdFile, tmp_47_fu_933_p2, "tmp_47_fu_933_p2");
    sc_trace(mVcdFile, tmp_46_fu_943_p3, "tmp_46_fu_943_p3");
    sc_trace(mVcdFile, tmp_37_cast_fu_967_p1, "tmp_37_cast_fu_967_p1");
    sc_trace(mVcdFile, tmp_50_fu_971_p2, "tmp_50_fu_971_p2");
    sc_trace(mVcdFile, tmp_51_fu_981_p2, "tmp_51_fu_981_p2");
    sc_trace(mVcdFile, tmp_43_fu_1009_p3, "tmp_43_fu_1009_p3");
    sc_trace(mVcdFile, tmp_44_fu_1021_p3, "tmp_44_fu_1021_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_1029_p1, "p_shl3_cast_fu_1029_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_1017_p1, "p_shl2_cast_fu_1017_p1");
    sc_trace(mVcdFile, tmp_29_cast_fu_1045_p1, "tmp_29_cast_fu_1045_p1");
    sc_trace(mVcdFile, tmp_48_fu_1049_p2, "tmp_48_fu_1049_p2");
    sc_trace(mVcdFile, tmp_32_fu_1059_p2, "tmp_32_fu_1059_p2");
    sc_trace(mVcdFile, tmp_33_cast_fu_1065_p1, "tmp_33_cast_fu_1065_p1");
    sc_trace(mVcdFile, tmp_49_fu_1069_p2, "tmp_49_fu_1069_p2");
    sc_trace(mVcdFile, tmp_34_fu_1107_p1, "tmp_34_fu_1107_p1");
    sc_trace(mVcdFile, tmp_30_fu_1103_p1, "tmp_30_fu_1103_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("mmult_hw.hdltvin.dat");
    mHdltvoutHandle.open("mmult_hw.hdltvout.dat");
}

mmult_hw::~mmult_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mmult_hw_CONTROL_BUS_s_axi_U;
    delete offset_buf_U;
    delete weight_buf_U;
    delete in_buf_U;
    delete out_buf_U;
    delete mmult_hw_fadd_32nbkb_U1;
    delete mmult_hw_fmul_32ncud_U2;
}

void mmult_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mmult_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_604_p2.read()))) {
        i1_reg_378 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_682_p2.read()))) {
        i1_reg_378 = i_2_reg_1136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_652_p2.read()))) {
        i2_reg_435 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_785_p2.read()))) {
        i2_reg_435 = i_3_reg_1182.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_755_p2.read()))) {
        i4_reg_480 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_912_p2.read()))) {
        i4_reg_480 = i_4_reg_1228.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_858_p2.read()))) {
        i6_reg_549 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1039_p2.read()))) {
        i6_reg_549 = i_5_reg_1312.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        i_reg_343 = i_1_fu_646_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_343 = ap_const_lv4_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_vld_out.read()))) {
            in_stream_data_V_0_sel_rd =  (sc_logic) (~in_stream_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_ack_in.read()))) {
            in_stream_data_V_0_sel_wr =  (sc_logic) (~in_stream_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_stream_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_stream_data_V_0_state.read(), ap_const_lv2_2)))) {
            in_stream_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_data_V_0_state.read(), ap_const_lv2_1)))) {
            in_stream_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_stream_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_stream_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_ack_out.read()))))) {
            in_stream_data_V_0_state = ap_const_lv2_3;
        } else {
            in_stream_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_stream_dest_V_0_state.read())))) {
            in_stream_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream_dest_V_0_state.read())))) {
            in_stream_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_stream_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream_dest_V_0_ack_out.read()))))) {
            in_stream_dest_V_0_state = ap_const_lv2_3;
        } else {
            in_stream_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_604_p2.read()))) {
        indvars_iv1_reg_366 = ap_const_lv11_85;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_682_p2.read()))) {
        indvars_iv1_reg_366 = indvars_iv_next1_fu_713_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_652_p2.read()))) {
        indvars_iv5_reg_423 = ap_const_lv12_585;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_785_p2.read()))) {
        indvars_iv5_reg_423 = indvars_iv_next6_fu_816_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_858_p2.read()))) {
        indvars_iv_reg_525 = ap_const_lv6_5;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1039_p2.read()))) {
        indvars_iv_reg_525 = indvars_iv_next_fu_1097_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_604_p2.read()))) {
        is_idx_1_reg_390 = ap_const_lv11_5;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_682_p2.read()))) {
        is_idx_1_reg_390 = tmp_s_reg_1141.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        is_idx_2_reg_413 = tmp_11_reg_1154.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_652_p2.read()))) {
        is_idx_2_reg_413 = is_idx_1_reg_390.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_652_p2.read()))) {
        is_idx_3_reg_447 = ap_const_lv12_505;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_785_p2.read()))) {
        is_idx_3_reg_447 = is_idx_5_reg_1187.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        is_idx_4_reg_470 = is_idx_6_reg_1200.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_755_p2.read()))) {
        is_idx_4_reg_470 = is_idx_3_reg_447.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        is_idx_reg_355 = tmp_2_reg_1123.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        is_idx_reg_355 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        j3_reg_459 = j_2_reg_1215.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_755_p2.read()))) {
        j3_reg_459 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_955_p2.read()))) {
        j5_reg_491 = j_4_reg_1246.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_858_p2.read()))) {
        j5_reg_491 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        j7_reg_570 = j_3_reg_1351.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_991_p2.read()))) {
        j7_reg_570 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        j_reg_402 = j_1_reg_1169.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_652_p2.read()))) {
        j_reg_402 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        k_reg_503 = k_1_reg_1274.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        k_reg_503 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        os_idx_1_reg_560 = tmp_36_reg_1341.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_991_p2.read()))) {
        os_idx_1_reg_560 = os_idx_reg_537.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_858_p2.read()))) {
        os_idx_reg_537 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1039_p2.read()))) {
        os_idx_reg_537 = os_idx_2_reg_1317.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_vld_out.read()))) {
            out_stream_data_V_1_sel_rd =  (sc_logic) (~out_stream_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_ack_in.read()))) {
            out_stream_data_V_1_sel_wr =  (sc_logic) (~out_stream_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_data_V_1_state.read())))) {
            out_stream_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_data_V_1_state.read())))) {
            out_stream_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_ack_out.read()))))) {
            out_stream_data_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_vld_out.read()))) {
            out_stream_dest_V_1_sel_rd =  (sc_logic) (~out_stream_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_dest_V_1_state.read())))) {
            out_stream_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_dest_V_1_state.read())))) {
            out_stream_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_dest_V_1_ack_out.read()))))) {
            out_stream_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_vld_out.read()))) {
            out_stream_id_V_1_sel_rd =  (sc_logic) (~out_stream_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_id_V_1_state.read())))) {
            out_stream_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_id_V_1_state.read())))) {
            out_stream_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_id_V_1_ack_out.read()))))) {
            out_stream_id_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_vld_out.read()))) {
            out_stream_keep_V_1_sel_rd =  (sc_logic) (~out_stream_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_keep_V_1_state.read())))) {
            out_stream_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_keep_V_1_state.read())))) {
            out_stream_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_keep_V_1_ack_out.read()))))) {
            out_stream_keep_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_vld_out.read()))) {
            out_stream_last_V_1_sel_rd =  (sc_logic) (~out_stream_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_ack_in.read()))) {
            out_stream_last_V_1_sel_wr =  (sc_logic) (~out_stream_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_last_V_1_state.read())))) {
            out_stream_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_last_V_1_state.read())))) {
            out_stream_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_ack_out.read()))))) {
            out_stream_last_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_vld_out.read()))) {
            out_stream_strb_V_1_sel_rd =  (sc_logic) (~out_stream_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_strb_V_1_state.read())))) {
            out_stream_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_strb_V_1_state.read())))) {
            out_stream_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_strb_V_1_ack_out.read()))))) {
            out_stream_strb_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_vld_out.read()))) {
            out_stream_user_V_1_sel_rd =  (sc_logic) (~out_stream_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_user_V_1_state.read())))) {
            out_stream_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_user_V_1_state.read())))) {
            out_stream_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_user_V_1_ack_out.read()))))) {
            out_stream_user_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp1_reg_514 = grp_fu_581_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp1_reg_514 = offset_buf_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_2_reg_1136 = i_2_fu_658_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_3_reg_1182 = i_3_fu_761_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_4_reg_1228 = i_4_fu_864_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())))) {
        i_5_reg_1312 = i_5_fu_997_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        in_buf_load_reg_1289 = in_buf_q0.read();
        weight_buf_load_reg_1294 = weight_buf_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_load_A.read())) {
        in_stream_data_V_0_payload_A = in_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_load_B.read())) {
        in_stream_data_V_0_payload_B = in_stream_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_755_p2.read()))) {
        is_idx_5_reg_1187 = is_idx_5_fu_767_p2.read();
        tmp_14_cast_reg_1192 = tmp_14_cast_fu_781_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_785_p2.read()))) {
        is_idx_6_reg_1200 = is_idx_6_fu_791_p2.read();
        j_2_reg_1215 = j_2_fu_810_p2.read();
        tmp_37_reg_1205 = tmp_37_fu_801_p2.read();
        tmp_40_reg_1210 = tmp_40_fu_806_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_682_p2.read()))) {
        j_1_reg_1169 = j_1_fu_707_p2.read();
        tmp_11_reg_1154 = tmp_11_fu_688_p2.read();
        tmp_14_reg_1159 = tmp_14_fu_698_p2.read();
        tmp_18_reg_1164 = tmp_18_fu_703_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1039_p2.read()))) {
        j_3_reg_1351 = j_3_fu_1091_p2.read();
        last_assign_reg_1346 = last_assign_fu_1085_p2.read();
        tmp_36_reg_1341 = tmp_36_fu_1079_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_4_reg_1246 = j_4_fu_918_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        k_1_reg_1274 = k_1_fu_961_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_991_p2.read()))) {
        os_idx_2_reg_1317 = os_idx_2_fu_1003_p2.read();
        tmp_45_reg_1322 = tmp_45_fu_1033_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_912_p2.read()))) {
        out_buf_addr_2_reg_1251 =  (sc_lv<7>) (tmp_51_cast_fu_938_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_load_A.read())) {
        out_stream_data_V_1_payload_A = converter_fu_1111_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_load_B.read())) {
        out_stream_data_V_1_payload_B = converter_fu_1111_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_load_A.read())) {
        out_stream_last_V_1_payload_A = last_assign_reg_1346.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_load_B.read())) {
        out_stream_last_V_1_payload_B = last_assign_reg_1346.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_858_p2.read()))) {
        tmp_27_cast_reg_1233 = tmp_27_cast_fu_878_p1.read();
        tmp_29_reg_1238 = tmp_29_fu_906_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_2_reg_1123 = tmp_2_fu_610_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_38_reg_1299 = grp_fu_586_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_50_cast_reg_1261 = tmp_50_cast_fu_951_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_652_p2.read()))) {
        tmp_5_cast_reg_1146 = tmp_5_cast_fu_678_p1.read();
        tmp_s_reg_1141 = tmp_s_fu_664_p2.read();
    }
}

void mmult_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mmult_hw::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void mmult_hw::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void mmult_hw::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void mmult_hw::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void mmult_hw::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void mmult_hw::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void mmult_hw::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void mmult_hw::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void mmult_hw::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mmult_hw::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void mmult_hw::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void mmult_hw::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void mmult_hw::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void mmult_hw::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void mmult_hw::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mmult_hw::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mmult_hw::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mmult_hw::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mmult_hw::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mmult_hw::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void mmult_hw::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void mmult_hw::thread_ap_block_state24() {
    ap_block_state24 = (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read()));
}

void mmult_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_991_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mmult_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mmult_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_991_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mmult_hw::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mmult_hw::thread_converter_fu_1111_p3() {
    converter_fu_1111_p3 = esl_concat<32,32>(tmp_34_fu_1107_p1.read(), tmp_30_fu_1103_p1.read());
}

void mmult_hw::thread_exitcond1_fu_991_p2() {
    exitcond1_fu_991_p2 = (!i6_reg_549.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i6_reg_549.read() == ap_const_lv4_8);
}

void mmult_hw::thread_exitcond2_fu_955_p2() {
    exitcond2_fu_955_p2 = (!k_reg_503.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_503.read() == ap_const_lv9_100);
}

void mmult_hw::thread_exitcond3_fu_912_p2() {
    exitcond3_fu_912_p2 = (!j5_reg_491.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j5_reg_491.read() == ap_const_lv4_A);
}

void mmult_hw::thread_exitcond4_fu_858_p2() {
    exitcond4_fu_858_p2 = (!i4_reg_480.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i4_reg_480.read() == ap_const_lv4_8);
}

void mmult_hw::thread_exitcond5_fu_604_p2() {
    exitcond5_fu_604_p2 = (!is_idx_reg_355.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(is_idx_reg_355.read() == ap_const_lv3_5);
}

void mmult_hw::thread_exitcond6_fu_652_p2() {
    exitcond6_fu_652_p2 = (!i1_reg_378.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_378.read() == ap_const_lv4_A);
}

void mmult_hw::thread_exitcond7_fu_785_p2() {
    exitcond7_fu_785_p2 = (!is_idx_4_reg_470.read().is_01() || !indvars_iv5_reg_423.read().is_01())? sc_lv<1>(): sc_lv<1>(is_idx_4_reg_470.read() == indvars_iv5_reg_423.read());
}

void mmult_hw::thread_exitcond8_fu_755_p2() {
    exitcond8_fu_755_p2 = (!i2_reg_435.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i2_reg_435.read() == ap_const_lv4_8);
}

void mmult_hw::thread_exitcond9_fu_682_p2() {
    exitcond9_fu_682_p2 = (!is_idx_2_reg_413.read().is_01() || !indvars_iv1_reg_366.read().is_01())? sc_lv<1>(): sc_lv<1>(is_idx_2_reg_413.read() == indvars_iv1_reg_366.read());
}

void mmult_hw::thread_exitcond_fu_1039_p2() {
    exitcond_fu_1039_p2 = (!os_idx_1_reg_560.read().is_01() || !indvars_iv_reg_525.read().is_01())? sc_lv<1>(): sc_lv<1>(os_idx_1_reg_560.read() == indvars_iv_reg_525.read());
}

void mmult_hw::thread_grp_fu_594_p4() {
    grp_fu_594_p4 = in_stream_data_V_0_data_out.read().range(63, 32);
}

void mmult_hw::thread_i_1_fu_646_p2() {
    i_1_fu_646_p2 = (!ap_const_lv4_2.is_01() || !i_reg_343.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_2) + sc_biguint<4>(i_reg_343.read()));
}

void mmult_hw::thread_i_2_fu_658_p2() {
    i_2_fu_658_p2 = (!i1_reg_378.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_reg_378.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mmult_hw::thread_i_3_fu_761_p2() {
    i_3_fu_761_p2 = (!i2_reg_435.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i2_reg_435.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mmult_hw::thread_i_4_fu_864_p2() {
    i_4_fu_864_p2 = (!i4_reg_480.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i4_reg_480.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mmult_hw::thread_i_5_fu_997_p2() {
    i_5_fu_997_p2 = (!i6_reg_549.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i6_reg_549.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mmult_hw::thread_in_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        in_buf_address0 =  (sc_lv<11>) (tmp_55_cast_fu_986_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        in_buf_address0 =  (sc_lv<11>) (tmp_43_cast_fu_831_p1.read());
    } else {
        in_buf_address0 = "XXXXXXXXXXX";
    }
}

void mmult_hw::thread_in_buf_address1() {
    in_buf_address1 =  (sc_lv<11>) (tmp_42_fu_853_p1.read());
}

void mmult_hw::thread_in_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        in_buf_ce0 = ap_const_logic_1;
    } else {
        in_buf_ce0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_in_buf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        in_buf_ce1 = ap_const_logic_1;
    } else {
        in_buf_ce1 = ap_const_logic_0;
    }
}

void mmult_hw::thread_in_buf_d0() {
    in_buf_d0 = tmp_33_fu_822_p1.read();
}

void mmult_hw::thread_in_buf_d1() {
    in_buf_d1 = grp_fu_594_p4.read();
}

void mmult_hw::thread_in_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        in_buf_we0 = ap_const_logic_1;
    } else {
        in_buf_we0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_in_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        in_buf_we1 = ap_const_logic_1;
    } else {
        in_buf_we1 = ap_const_logic_0;
    }
}

void mmult_hw::thread_in_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        in_stream_TDATA_blk_n = in_stream_data_V_0_state.read()[0];
    } else {
        in_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void mmult_hw::thread_in_stream_TREADY() {
    in_stream_TREADY = in_stream_dest_V_0_state.read()[1];
}

void mmult_hw::thread_in_stream_data_V_0_ack_in() {
    in_stream_data_V_0_ack_in = in_stream_data_V_0_state.read()[1];
}

void mmult_hw::thread_in_stream_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        in_stream_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream_data_V_0_ack_out = ap_const_logic_0;
    }
}

void mmult_hw::thread_in_stream_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_data_V_0_sel.read())) {
        in_stream_data_V_0_data_out = in_stream_data_V_0_payload_B.read();
    } else {
        in_stream_data_V_0_data_out = in_stream_data_V_0_payload_A.read();
    }
}

void mmult_hw::thread_in_stream_data_V_0_load_A() {
    in_stream_data_V_0_load_A = (in_stream_data_V_0_state_cmp_full.read() & ~in_stream_data_V_0_sel_wr.read());
}

void mmult_hw::thread_in_stream_data_V_0_load_B() {
    in_stream_data_V_0_load_B = (in_stream_data_V_0_sel_wr.read() & in_stream_data_V_0_state_cmp_full.read());
}

void mmult_hw::thread_in_stream_data_V_0_sel() {
    in_stream_data_V_0_sel = in_stream_data_V_0_sel_rd.read();
}

void mmult_hw::thread_in_stream_data_V_0_state_cmp_full() {
    in_stream_data_V_0_state_cmp_full =  (sc_logic) ((!in_stream_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_stream_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void mmult_hw::thread_in_stream_data_V_0_vld_in() {
    in_stream_data_V_0_vld_in = in_stream_TVALID.read();
}

void mmult_hw::thread_in_stream_data_V_0_vld_out() {
    in_stream_data_V_0_vld_out = in_stream_data_V_0_state.read()[0];
}

void mmult_hw::thread_in_stream_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        in_stream_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void mmult_hw::thread_in_stream_dest_V_0_vld_in() {
    in_stream_dest_V_0_vld_in = in_stream_TVALID.read();
}

void mmult_hw::thread_indvars_iv_next1_fu_713_p2() {
    indvars_iv_next1_fu_713_p2 = (!indvars_iv1_reg_366.read().is_01() || !ap_const_lv11_80.is_01())? sc_lv<11>(): (sc_biguint<11>(indvars_iv1_reg_366.read()) + sc_biguint<11>(ap_const_lv11_80));
}

void mmult_hw::thread_indvars_iv_next6_fu_816_p2() {
    indvars_iv_next6_fu_816_p2 = (!indvars_iv5_reg_423.read().is_01() || !ap_const_lv12_80.is_01())? sc_lv<12>(): (sc_biguint<12>(indvars_iv5_reg_423.read()) + sc_biguint<12>(ap_const_lv12_80));
}

void mmult_hw::thread_indvars_iv_next_fu_1097_p2() {
    indvars_iv_next_fu_1097_p2 = (!indvars_iv_reg_525.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<6>(): (sc_biguint<6>(indvars_iv_reg_525.read()) + sc_biguint<6>(ap_const_lv6_5));
}

void mmult_hw::thread_is_idx_5_fu_767_p2() {
    is_idx_5_fu_767_p2 = (!is_idx_3_reg_447.read().is_01() || !ap_const_lv12_80.is_01())? sc_lv<12>(): (sc_biguint<12>(is_idx_3_reg_447.read()) + sc_biguint<12>(ap_const_lv12_80));
}

void mmult_hw::thread_is_idx_6_fu_791_p2() {
    is_idx_6_fu_791_p2 = (!ap_const_lv12_1.is_01() || !is_idx_4_reg_470.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_1) + sc_biguint<12>(is_idx_4_reg_470.read()));
}

void mmult_hw::thread_j_1_fu_707_p2() {
    j_1_fu_707_p2 = (!ap_const_lv9_2.is_01() || !j_reg_402.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_2) + sc_biguint<9>(j_reg_402.read()));
}

void mmult_hw::thread_j_2_fu_810_p2() {
    j_2_fu_810_p2 = (!ap_const_lv9_2.is_01() || !j3_reg_459.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_2) + sc_biguint<9>(j3_reg_459.read()));
}

void mmult_hw::thread_j_3_fu_1091_p2() {
    j_3_fu_1091_p2 = (!j7_reg_570.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(j7_reg_570.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void mmult_hw::thread_j_4_fu_918_p2() {
    j_4_fu_918_p2 = (!j5_reg_491.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j5_reg_491.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mmult_hw::thread_k_1_fu_961_p2() {
    k_1_fu_961_p2 = (!k_reg_503.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(k_reg_503.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void mmult_hw::thread_last_assign_fu_1085_p2() {
    last_assign_fu_1085_p2 = (!tmp_36_fu_1079_p2.read().is_01() || !ap_const_lv6_28.is_01())? sc_lv<1>(): sc_lv<1>(tmp_36_fu_1079_p2.read() == ap_const_lv6_28);
}

void mmult_hw::thread_offset_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        offset_buf_address0 =  (sc_lv<4>) (tmp_28_fu_924_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        offset_buf_address0 =  (sc_lv<4>) (tmp_4_fu_625_p1.read());
    } else {
        offset_buf_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void mmult_hw::thread_offset_buf_address1() {
    offset_buf_address1 =  (sc_lv<4>) (tmp_9_fu_641_p1.read());
}

void mmult_hw::thread_offset_buf_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        offset_buf_ce0 = ap_const_logic_1;
    } else {
        offset_buf_ce0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_offset_buf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        offset_buf_ce1 = ap_const_logic_1;
    } else {
        offset_buf_ce1 = ap_const_logic_0;
    }
}

void mmult_hw::thread_offset_buf_d0() {
    offset_buf_d0 = tmp_5_fu_616_p1.read();
}

void mmult_hw::thread_offset_buf_d1() {
    offset_buf_d1 = grp_fu_594_p4.read();
}

void mmult_hw::thread_offset_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        offset_buf_we0 = ap_const_logic_1;
    } else {
        offset_buf_we0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_offset_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        offset_buf_we1 = ap_const_logic_1;
    } else {
        offset_buf_we1 = ap_const_logic_0;
    }
}

void mmult_hw::thread_os_idx_2_fu_1003_p2() {
    os_idx_2_fu_1003_p2 = (!os_idx_reg_537.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<6>(): (sc_biguint<6>(os_idx_reg_537.read()) + sc_biguint<6>(ap_const_lv6_5));
}

void mmult_hw::thread_out_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        out_buf_address0 =  (sc_lv<7>) (tmp_52_cast_fu_1054_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_buf_address0 = out_buf_addr_2_reg_1251.read();
    } else {
        out_buf_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void mmult_hw::thread_out_buf_address1() {
    out_buf_address1 =  (sc_lv<7>) (tmp_53_cast_fu_1074_p1.read());
}

void mmult_hw::thread_out_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        out_buf_ce0 = ap_const_logic_1;
    } else {
        out_buf_ce0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_buf_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        out_buf_ce1 = ap_const_logic_1;
    } else {
        out_buf_ce1 = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_955_p2.read()))) {
        out_buf_we0 = ap_const_logic_1;
    } else {
        out_buf_we0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_TDATA() {
    out_stream_TDATA = out_stream_data_V_1_data_out.read();
}

void mmult_hw::thread_out_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        out_stream_TDATA_blk_n = out_stream_data_V_1_state.read()[1];
    } else {
        out_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void mmult_hw::thread_out_stream_TDEST() {
    out_stream_TDEST = out_stream_dest_V_1_data_out.read();
}

void mmult_hw::thread_out_stream_TID() {
    out_stream_TID = out_stream_id_V_1_data_out.read();
}

void mmult_hw::thread_out_stream_TKEEP() {
    out_stream_TKEEP = out_stream_keep_V_1_data_out.read();
}

void mmult_hw::thread_out_stream_TLAST() {
    out_stream_TLAST = out_stream_last_V_1_data_out.read();
}

void mmult_hw::thread_out_stream_TSTRB() {
    out_stream_TSTRB = out_stream_strb_V_1_data_out.read();
}

void mmult_hw::thread_out_stream_TUSER() {
    out_stream_TUSER = out_stream_user_V_1_data_out.read();
}

void mmult_hw::thread_out_stream_TVALID() {
    out_stream_TVALID = out_stream_dest_V_1_state.read()[0];
}

void mmult_hw::thread_out_stream_data_V_1_ack_in() {
    out_stream_data_V_1_ack_in = out_stream_data_V_1_state.read()[1];
}

void mmult_hw::thread_out_stream_data_V_1_ack_out() {
    out_stream_data_V_1_ack_out = out_stream_TREADY.read();
}

void mmult_hw::thread_out_stream_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_data_V_1_sel.read())) {
        out_stream_data_V_1_data_out = out_stream_data_V_1_payload_B.read();
    } else {
        out_stream_data_V_1_data_out = out_stream_data_V_1_payload_A.read();
    }
}

void mmult_hw::thread_out_stream_data_V_1_load_A() {
    out_stream_data_V_1_load_A = (out_stream_data_V_1_state_cmp_full.read() & ~out_stream_data_V_1_sel_wr.read());
}

void mmult_hw::thread_out_stream_data_V_1_load_B() {
    out_stream_data_V_1_load_B = (out_stream_data_V_1_sel_wr.read() & out_stream_data_V_1_state_cmp_full.read());
}

void mmult_hw::thread_out_stream_data_V_1_sel() {
    out_stream_data_V_1_sel = out_stream_data_V_1_sel_rd.read();
}

void mmult_hw::thread_out_stream_data_V_1_state_cmp_full() {
    out_stream_data_V_1_state_cmp_full =  (sc_logic) ((!out_stream_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void mmult_hw::thread_out_stream_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_data_V_1_vld_in = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_data_V_1_vld_out() {
    out_stream_data_V_1_vld_out = out_stream_data_V_1_state.read()[0];
}

void mmult_hw::thread_out_stream_dest_V_1_ack_in() {
    out_stream_dest_V_1_ack_in = out_stream_dest_V_1_state.read()[1];
}

void mmult_hw::thread_out_stream_dest_V_1_ack_out() {
    out_stream_dest_V_1_ack_out = out_stream_TREADY.read();
}

void mmult_hw::thread_out_stream_dest_V_1_data_out() {
    out_stream_dest_V_1_data_out = ap_const_lv5_0;
}

void mmult_hw::thread_out_stream_dest_V_1_sel() {
    out_stream_dest_V_1_sel = out_stream_dest_V_1_sel_rd.read();
}

void mmult_hw::thread_out_stream_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_dest_V_1_vld_out() {
    out_stream_dest_V_1_vld_out = out_stream_dest_V_1_state.read()[0];
}

void mmult_hw::thread_out_stream_id_V_1_ack_in() {
    out_stream_id_V_1_ack_in = out_stream_id_V_1_state.read()[1];
}

void mmult_hw::thread_out_stream_id_V_1_ack_out() {
    out_stream_id_V_1_ack_out = out_stream_TREADY.read();
}

void mmult_hw::thread_out_stream_id_V_1_data_out() {
    out_stream_id_V_1_data_out = ap_const_lv5_0;
}

void mmult_hw::thread_out_stream_id_V_1_sel() {
    out_stream_id_V_1_sel = out_stream_id_V_1_sel_rd.read();
}

void mmult_hw::thread_out_stream_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_id_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_id_V_1_vld_in = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_id_V_1_vld_out() {
    out_stream_id_V_1_vld_out = out_stream_id_V_1_state.read()[0];
}

void mmult_hw::thread_out_stream_keep_V_1_ack_in() {
    out_stream_keep_V_1_ack_in = out_stream_keep_V_1_state.read()[1];
}

void mmult_hw::thread_out_stream_keep_V_1_ack_out() {
    out_stream_keep_V_1_ack_out = out_stream_TREADY.read();
}

void mmult_hw::thread_out_stream_keep_V_1_data_out() {
    out_stream_keep_V_1_data_out = ap_const_lv8_FF;
}

void mmult_hw::thread_out_stream_keep_V_1_sel() {
    out_stream_keep_V_1_sel = out_stream_keep_V_1_sel_rd.read();
}

void mmult_hw::thread_out_stream_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_keep_V_1_vld_out() {
    out_stream_keep_V_1_vld_out = out_stream_keep_V_1_state.read()[0];
}

void mmult_hw::thread_out_stream_last_V_1_ack_in() {
    out_stream_last_V_1_ack_in = out_stream_last_V_1_state.read()[1];
}

void mmult_hw::thread_out_stream_last_V_1_ack_out() {
    out_stream_last_V_1_ack_out = out_stream_TREADY.read();
}

void mmult_hw::thread_out_stream_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_last_V_1_sel.read())) {
        out_stream_last_V_1_data_out = out_stream_last_V_1_payload_B.read();
    } else {
        out_stream_last_V_1_data_out = out_stream_last_V_1_payload_A.read();
    }
}

void mmult_hw::thread_out_stream_last_V_1_load_A() {
    out_stream_last_V_1_load_A = (out_stream_last_V_1_state_cmp_full.read() & ~out_stream_last_V_1_sel_wr.read());
}

void mmult_hw::thread_out_stream_last_V_1_load_B() {
    out_stream_last_V_1_load_B = (out_stream_last_V_1_sel_wr.read() & out_stream_last_V_1_state_cmp_full.read());
}

void mmult_hw::thread_out_stream_last_V_1_sel() {
    out_stream_last_V_1_sel = out_stream_last_V_1_sel_rd.read();
}

void mmult_hw::thread_out_stream_last_V_1_state_cmp_full() {
    out_stream_last_V_1_state_cmp_full =  (sc_logic) ((!out_stream_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void mmult_hw::thread_out_stream_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_last_V_1_vld_in = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_last_V_1_vld_out() {
    out_stream_last_V_1_vld_out = out_stream_last_V_1_state.read()[0];
}

void mmult_hw::thread_out_stream_strb_V_1_ack_in() {
    out_stream_strb_V_1_ack_in = out_stream_strb_V_1_state.read()[1];
}

void mmult_hw::thread_out_stream_strb_V_1_ack_out() {
    out_stream_strb_V_1_ack_out = out_stream_TREADY.read();
}

void mmult_hw::thread_out_stream_strb_V_1_data_out() {
    out_stream_strb_V_1_data_out = ap_const_lv8_FF;
}

void mmult_hw::thread_out_stream_strb_V_1_sel() {
    out_stream_strb_V_1_sel = out_stream_strb_V_1_sel_rd.read();
}

void mmult_hw::thread_out_stream_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_strb_V_1_vld_out() {
    out_stream_strb_V_1_vld_out = out_stream_strb_V_1_state.read()[0];
}

void mmult_hw::thread_out_stream_user_V_1_ack_in() {
    out_stream_user_V_1_ack_in = out_stream_user_V_1_state.read()[1];
}

void mmult_hw::thread_out_stream_user_V_1_ack_out() {
    out_stream_user_V_1_ack_out = out_stream_TREADY.read();
}

void mmult_hw::thread_out_stream_user_V_1_data_out() {
    out_stream_user_V_1_data_out = ap_const_lv4_0;
}

void mmult_hw::thread_out_stream_user_V_1_sel() {
    out_stream_user_V_1_sel = out_stream_user_V_1_sel_rd.read();
}

void mmult_hw::thread_out_stream_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_user_V_1_vld_in = ap_const_logic_0;
    }
}

void mmult_hw::thread_out_stream_user_V_1_vld_out() {
    out_stream_user_V_1_vld_out = out_stream_user_V_1_state.read()[0];
}

void mmult_hw::thread_p_shl1_cast_fu_902_p1() {
    p_shl1_cast_fu_902_p1 = esl_zext<8,5>(tmp_27_fu_894_p3.read());
}

void mmult_hw::thread_p_shl2_cast_fu_1017_p1() {
    p_shl2_cast_fu_1017_p1 = esl_zext<8,7>(tmp_43_fu_1009_p3.read());
}

void mmult_hw::thread_p_shl3_cast_fu_1029_p1() {
    p_shl3_cast_fu_1029_p1 = esl_zext<8,5>(tmp_44_fu_1021_p3.read());
}

void mmult_hw::thread_p_shl_cast_fu_890_p1() {
    p_shl_cast_fu_890_p1 = esl_zext<8,7>(tmp_26_fu_882_p3.read());
}

void mmult_hw::thread_tmp_11_fu_688_p2() {
    tmp_11_fu_688_p2 = (!ap_const_lv11_1.is_01() || !is_idx_2_reg_413.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(is_idx_2_reg_413.read()));
}

void mmult_hw::thread_tmp_12_fu_773_p3() {
    tmp_12_fu_773_p3 = esl_concat<4,8>(i2_reg_435.read(), ap_const_lv8_0);
}

void mmult_hw::thread_tmp_13_cast_fu_694_p1() {
    tmp_13_cast_fu_694_p1 = esl_zext<13,9>(j_reg_402.read());
}

void mmult_hw::thread_tmp_13_fu_719_p1() {
    tmp_13_fu_719_p1 = in_stream_data_V_0_data_out.read().range(32-1, 0);
}

void mmult_hw::thread_tmp_14_cast_fu_781_p1() {
    tmp_14_cast_fu_781_p1 = esl_zext<13,12>(tmp_12_fu_773_p3.read());
}

void mmult_hw::thread_tmp_14_fu_698_p2() {
    tmp_14_fu_698_p2 = (!tmp_13_cast_fu_694_p1.read().is_01() || !tmp_5_cast_reg_1146.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_13_cast_fu_694_p1.read()) + sc_biguint<13>(tmp_5_cast_reg_1146.read()));
}

void mmult_hw::thread_tmp_17_fu_737_p2() {
    tmp_17_fu_737_p2 = (tmp_18_reg_1164.read() | ap_const_lv8_1);
}

void mmult_hw::thread_tmp_18_cast_fu_728_p1() {
    tmp_18_cast_fu_728_p1 = esl_zext<64,13>(tmp_14_reg_1159.read());
}

void mmult_hw::thread_tmp_18_fu_703_p1() {
    tmp_18_fu_703_p1 = j_reg_402.read().range(8-1, 0);
}

void mmult_hw::thread_tmp_19_fu_742_p3() {
    tmp_19_fu_742_p3 = esl_concat<4,8>(i1_reg_378.read(), tmp_17_fu_737_p2.read());
}

void mmult_hw::thread_tmp_1_fu_670_p3() {
    tmp_1_fu_670_p3 = esl_concat<4,8>(i1_reg_378.read(), ap_const_lv8_0);
}

void mmult_hw::thread_tmp_21_cast_fu_797_p1() {
    tmp_21_cast_fu_797_p1 = esl_zext<13,9>(j3_reg_459.read());
}

void mmult_hw::thread_tmp_21_fu_750_p1() {
    tmp_21_fu_750_p1 = esl_zext<64,12>(tmp_19_fu_742_p3.read());
}

void mmult_hw::thread_tmp_22_fu_870_p3() {
    tmp_22_fu_870_p3 = esl_concat<4,8>(i4_reg_480.read(), ap_const_lv8_0);
}

void mmult_hw::thread_tmp_25_fu_840_p2() {
    tmp_25_fu_840_p2 = (tmp_40_reg_1210.read() | ap_const_lv8_1);
}

void mmult_hw::thread_tmp_26_fu_882_p3() {
    tmp_26_fu_882_p3 = esl_concat<4,3>(i4_reg_480.read(), ap_const_lv3_0);
}

void mmult_hw::thread_tmp_27_cast_fu_878_p1() {
    tmp_27_cast_fu_878_p1 = esl_zext<13,12>(tmp_22_fu_870_p3.read());
}

void mmult_hw::thread_tmp_27_fu_894_p3() {
    tmp_27_fu_894_p3 = esl_concat<4,1>(i4_reg_480.read(), ap_const_lv1_0);
}

void mmult_hw::thread_tmp_28_cast_fu_929_p1() {
    tmp_28_cast_fu_929_p1 = esl_zext<8,4>(j5_reg_491.read());
}

void mmult_hw::thread_tmp_28_fu_924_p1() {
    tmp_28_fu_924_p1 = esl_zext<64,4>(j5_reg_491.read());
}

void mmult_hw::thread_tmp_29_cast_fu_1045_p1() {
    tmp_29_cast_fu_1045_p1 = esl_zext<8,4>(j7_reg_570.read());
}

void mmult_hw::thread_tmp_29_fu_906_p2() {
    tmp_29_fu_906_p2 = (!p_shl1_cast_fu_902_p1.read().is_01() || !p_shl_cast_fu_890_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl1_cast_fu_902_p1.read()) + sc_biguint<8>(p_shl_cast_fu_890_p1.read()));
}

void mmult_hw::thread_tmp_2_fu_610_p2() {
    tmp_2_fu_610_p2 = (!is_idx_reg_355.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(is_idx_reg_355.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mmult_hw::thread_tmp_30_fu_1103_p1() {
    tmp_30_fu_1103_p1 = out_buf_q0.read();
}

void mmult_hw::thread_tmp_32_fu_1059_p2() {
    tmp_32_fu_1059_p2 = (j7_reg_570.read() | ap_const_lv4_1);
}

void mmult_hw::thread_tmp_33_cast_fu_1065_p1() {
    tmp_33_cast_fu_1065_p1 = esl_zext<8,4>(tmp_32_fu_1059_p2.read());
}

void mmult_hw::thread_tmp_33_fu_822_p1() {
    tmp_33_fu_822_p1 = in_stream_data_V_0_data_out.read().range(32-1, 0);
}

void mmult_hw::thread_tmp_34_fu_1107_p1() {
    tmp_34_fu_1107_p1 = out_buf_q1.read();
}

void mmult_hw::thread_tmp_36_fu_1079_p2() {
    tmp_36_fu_1079_p2 = (!os_idx_1_reg_560.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(os_idx_1_reg_560.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mmult_hw::thread_tmp_37_cast_fu_967_p1() {
    tmp_37_cast_fu_967_p1 = esl_zext<13,9>(k_reg_503.read());
}

void mmult_hw::thread_tmp_37_fu_801_p2() {
    tmp_37_fu_801_p2 = (!tmp_21_cast_fu_797_p1.read().is_01() || !tmp_14_cast_reg_1192.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_21_cast_fu_797_p1.read()) + sc_biguint<13>(tmp_14_cast_reg_1192.read()));
}

void mmult_hw::thread_tmp_40_fu_806_p1() {
    tmp_40_fu_806_p1 = j3_reg_459.read().range(8-1, 0);
}

void mmult_hw::thread_tmp_41_fu_845_p3() {
    tmp_41_fu_845_p3 = esl_concat<4,8>(i2_reg_435.read(), tmp_25_fu_840_p2.read());
}

void mmult_hw::thread_tmp_42_fu_853_p1() {
    tmp_42_fu_853_p1 = esl_zext<64,12>(tmp_41_fu_845_p3.read());
}

void mmult_hw::thread_tmp_43_cast_fu_831_p1() {
    tmp_43_cast_fu_831_p1 = esl_zext<64,13>(tmp_37_reg_1205.read());
}

void mmult_hw::thread_tmp_43_fu_1009_p3() {
    tmp_43_fu_1009_p3 = esl_concat<4,3>(i6_reg_549.read(), ap_const_lv3_0);
}

void mmult_hw::thread_tmp_44_fu_1021_p3() {
    tmp_44_fu_1021_p3 = esl_concat<4,1>(i6_reg_549.read(), ap_const_lv1_0);
}

void mmult_hw::thread_tmp_45_fu_1033_p2() {
    tmp_45_fu_1033_p2 = (!p_shl3_cast_fu_1029_p1.read().is_01() || !p_shl2_cast_fu_1017_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl3_cast_fu_1029_p1.read()) + sc_biguint<8>(p_shl2_cast_fu_1017_p1.read()));
}

void mmult_hw::thread_tmp_46_fu_943_p3() {
    tmp_46_fu_943_p3 = esl_concat<4,8>(j5_reg_491.read(), ap_const_lv8_0);
}

void mmult_hw::thread_tmp_47_fu_933_p2() {
    tmp_47_fu_933_p2 = (!tmp_28_cast_fu_929_p1.read().is_01() || !tmp_29_reg_1238.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_28_cast_fu_929_p1.read()) + sc_biguint<8>(tmp_29_reg_1238.read()));
}

void mmult_hw::thread_tmp_48_fu_1049_p2() {
    tmp_48_fu_1049_p2 = (!tmp_45_reg_1322.read().is_01() || !tmp_29_cast_fu_1045_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_45_reg_1322.read()) + sc_biguint<8>(tmp_29_cast_fu_1045_p1.read()));
}

void mmult_hw::thread_tmp_49_fu_1069_p2() {
    tmp_49_fu_1069_p2 = (!tmp_45_reg_1322.read().is_01() || !tmp_33_cast_fu_1065_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_45_reg_1322.read()) + sc_biguint<8>(tmp_33_cast_fu_1065_p1.read()));
}

void mmult_hw::thread_tmp_4_fu_625_p1() {
    tmp_4_fu_625_p1 = esl_zext<64,4>(i_reg_343.read());
}

void mmult_hw::thread_tmp_50_cast_fu_951_p1() {
    tmp_50_cast_fu_951_p1 = esl_zext<13,12>(tmp_46_fu_943_p3.read());
}

void mmult_hw::thread_tmp_50_fu_971_p2() {
    tmp_50_fu_971_p2 = (!tmp_50_cast_reg_1261.read().is_01() || !tmp_37_cast_fu_967_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_50_cast_reg_1261.read()) + sc_biguint<13>(tmp_37_cast_fu_967_p1.read()));
}

void mmult_hw::thread_tmp_51_cast_fu_938_p1() {
    tmp_51_cast_fu_938_p1 = esl_zext<64,8>(tmp_47_fu_933_p2.read());
}

void mmult_hw::thread_tmp_51_fu_981_p2() {
    tmp_51_fu_981_p2 = (!tmp_27_cast_reg_1233.read().is_01() || !tmp_37_cast_fu_967_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_27_cast_reg_1233.read()) + sc_biguint<13>(tmp_37_cast_fu_967_p1.read()));
}

void mmult_hw::thread_tmp_52_cast_fu_1054_p1() {
    tmp_52_cast_fu_1054_p1 = esl_zext<64,8>(tmp_48_fu_1049_p2.read());
}

void mmult_hw::thread_tmp_53_cast_fu_1074_p1() {
    tmp_53_cast_fu_1074_p1 = esl_zext<64,8>(tmp_49_fu_1069_p2.read());
}

void mmult_hw::thread_tmp_54_cast_fu_976_p1() {
    tmp_54_cast_fu_976_p1 = esl_zext<64,13>(tmp_50_fu_971_p2.read());
}

void mmult_hw::thread_tmp_55_cast_fu_986_p1() {
    tmp_55_cast_fu_986_p1 = esl_zext<64,13>(tmp_51_fu_981_p2.read());
}

void mmult_hw::thread_tmp_5_cast_fu_678_p1() {
    tmp_5_cast_fu_678_p1 = esl_zext<13,12>(tmp_1_fu_670_p3.read());
}

void mmult_hw::thread_tmp_5_fu_616_p1() {
    tmp_5_fu_616_p1 = in_stream_data_V_0_data_out.read().range(32-1, 0);
}

void mmult_hw::thread_tmp_8_fu_635_p2() {
    tmp_8_fu_635_p2 = (i_reg_343.read() | ap_const_lv4_1);
}

void mmult_hw::thread_tmp_9_fu_641_p1() {
    tmp_9_fu_641_p1 = esl_zext<64,4>(tmp_8_fu_635_p2.read());
}

void mmult_hw::thread_tmp_s_fu_664_p2() {
    tmp_s_fu_664_p2 = (!is_idx_1_reg_390.read().is_01() || !ap_const_lv11_80.is_01())? sc_lv<11>(): (sc_biguint<11>(is_idx_1_reg_390.read()) + sc_biguint<11>(ap_const_lv11_80));
}

void mmult_hw::thread_weight_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        weight_buf_address0 =  (sc_lv<12>) (tmp_54_cast_fu_976_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weight_buf_address0 =  (sc_lv<12>) (tmp_18_cast_fu_728_p1.read());
    } else {
        weight_buf_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void mmult_hw::thread_weight_buf_address1() {
    weight_buf_address1 =  (sc_lv<12>) (tmp_21_fu_750_p1.read());
}

void mmult_hw::thread_weight_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1)))) {
        weight_buf_ce0 = ap_const_logic_1;
    } else {
        weight_buf_ce0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_weight_buf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        weight_buf_ce1 = ap_const_logic_1;
    } else {
        weight_buf_ce1 = ap_const_logic_0;
    }
}

void mmult_hw::thread_weight_buf_d0() {
    weight_buf_d0 = tmp_13_fu_719_p1.read();
}

void mmult_hw::thread_weight_buf_d1() {
    weight_buf_d1 = grp_fu_594_p4.read();
}

void mmult_hw::thread_weight_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        weight_buf_we0 = ap_const_logic_1;
    } else {
        weight_buf_we0 = ap_const_logic_0;
    }
}

void mmult_hw::thread_weight_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
        weight_buf_we1 = ap_const_logic_1;
    } else {
        weight_buf_we1 = ap_const_logic_0;
    }
}

void mmult_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_604_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_652_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_682_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_755_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_785_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(in_stream_data_V_0_vld_out.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_858_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_912_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_955_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_991_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_stream_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_991_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1039_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(out_stream_data_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void mmult_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TDATA\" :  \"" << in_stream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TVALID\" :  \"" << in_stream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_stream_TREADY\" :  \"" << in_stream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TKEEP\" :  \"" << in_stream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TSTRB\" :  \"" << in_stream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TUSER\" :  \"" << in_stream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TLAST\" :  \"" << in_stream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TID\" :  \"" << in_stream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TDEST\" :  \"" << in_stream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDATA\" :  \"" << out_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TVALID\" :  \"" << out_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_TREADY\" :  \"" << out_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TKEEP\" :  \"" << out_stream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TSTRB\" :  \"" << out_stream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TUSER\" :  \"" << out_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TLAST\" :  \"" << out_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TID\" :  \"" << out_stream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDEST\" :  \"" << out_stream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWVALID\" :  \"" << s_axi_CONTROL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWREADY\" :  \"" << s_axi_CONTROL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWADDR\" :  \"" << s_axi_CONTROL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WVALID\" :  \"" << s_axi_CONTROL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_WREADY\" :  \"" << s_axi_CONTROL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WDATA\" :  \"" << s_axi_CONTROL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WSTRB\" :  \"" << s_axi_CONTROL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARVALID\" :  \"" << s_axi_CONTROL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARREADY\" :  \"" << s_axi_CONTROL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARADDR\" :  \"" << s_axi_CONTROL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RVALID\" :  \"" << s_axi_CONTROL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_RREADY\" :  \"" << s_axi_CONTROL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RDATA\" :  \"" << s_axi_CONTROL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RRESP\" :  \"" << s_axi_CONTROL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BVALID\" :  \"" << s_axi_CONTROL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_BREADY\" :  \"" << s_axi_CONTROL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BRESP\" :  \"" << s_axi_CONTROL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

